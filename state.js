awsim['ec2']['operations']['DescribeVpcs']['_state'] = JSON.parse(atob('ewogICAgIlZwY3MiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVnBjSWQiOiAidnBjLTY4NWQ0ODEwIiwgCiAgICAgICAgICAgICJJbnN0YW5jZVRlbmFuY3kiOiAiZGVmYXVsdCIsIAogICAgICAgICAgICAiVGFncyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiREVGQVVMVC1WUEMiLCAKICAgICAgICAgICAgICAgICAgICAiS2V5IjogIkRPLU5PVC1ERUxFVEUiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiREVGQVVMVC1WUEMiLCAKICAgICAgICAgICAgICAgICAgICAiS2V5IjogIk5hbWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiQ2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uSWQiOiAidnBjLWNpZHItYXNzb2MtZjc3ODZjOWQiLCAKICAgICAgICAgICAgICAgICAgICAiQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgICAgICAgICAiQ2lkckJsb2NrU3RhdGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhc3NvY2lhdGVkIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIkRoY3BPcHRpb25zSWQiOiAiZG9wdC0zYjcxOGE0MyIsIAogICAgICAgICAgICAiQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgIklzRGVmYXVsdCI6IHRydWUKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeVpcs']['_options'] = {};
awsim['ec2']['operations']['DescribeVpcs']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVpcs']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeRegions']['_state'] = JSON.parse(atob('ewogICAgIlJlZ2lvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmFwLXNvdXRoLTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5ldS13ZXN0LTMuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJldS13ZXN0LTMiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImV1LXdlc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAiZXUtd2VzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5hcC1ub3J0aGVhc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImFwLW5vcnRoZWFzdC0yIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5hcC1ub3J0aGVhc3QtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImFwLW5vcnRoZWFzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5zYS1lYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJzYS1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmNhLWNlbnRyYWwtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImNhLWNlbnRyYWwtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuYXAtc291dGhlYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aGVhc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuYXAtc291dGhlYXN0LTIuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aGVhc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAiZXUtY2VudHJhbC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogInVzLWVhc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAidXMtd2VzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi51cy13ZXN0LTIuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy13ZXN0LTIiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeRegions']['_options'] = {};
awsim['ec2']['operations']['DescribeRegions']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeRegions']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeSubnets']['_state'] = JSON.parse(atob('ewogICAgIlN1Ym5ldHMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwODgsIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtNjg1ZDQ4MTAiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTU0NTQ2MDFmIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjE2LjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFlIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwOTEsIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtNjg1ZDQ4MTAiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWQ0NDgzOGViIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjQ4LjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFhIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwODgsIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtNjg1ZDQ4MTAiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTdkMTA3ZjUyIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjgwLjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFkIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwOTEsIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtNjg1ZDQ4MTAiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTk5MmIwZWZkIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjAuMC8yMCIsIAogICAgICAgICAgICAiQXNzaWduSXB2NkFkZHJlc3NPbkNyZWF0aW9uIjogZmFsc2UKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogInVzLWVhc3QtMWYiLCAKICAgICAgICAgICAgIkF2YWlsYWJsZUlwQWRkcmVzc0NvdW50IjogNDA5MSwgCiAgICAgICAgICAgICJEZWZhdWx0Rm9yQXoiOiB0cnVlLCAKICAgICAgICAgICAgIklwdjZDaWRyQmxvY2tBc3NvY2lhdGlvblNldCI6IFtdLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy02ODVkNDgxMCIsIAogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJNYXBQdWJsaWNJcE9uTGF1bmNoIjogdHJ1ZSwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtNzY0MGJkNzkiLCAKICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIxNzIuMzEuNjQuMC8yMCIsIAogICAgICAgICAgICAiQXNzaWduSXB2NkFkZHJlc3NPbkNyZWF0aW9uIjogZmFsc2UKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogInVzLWVhc3QtMWMiLCAKICAgICAgICAgICAgIkF2YWlsYWJsZUlwQWRkcmVzc0NvdW50IjogNDA5MSwgCiAgICAgICAgICAgICJEZWZhdWx0Rm9yQXoiOiB0cnVlLCAKICAgICAgICAgICAgIklwdjZDaWRyQmxvY2tBc3NvY2lhdGlvblNldCI6IFtdLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy02ODVkNDgxMCIsIAogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJNYXBQdWJsaWNJcE9uTGF1bmNoIjogdHJ1ZSwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtYTVkZmJmZjgiLCAKICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIxNzIuMzEuMzIuMC8yMCIsIAogICAgICAgICAgICAiQXNzaWduSXB2NkFkZHJlc3NPbkNyZWF0aW9uIjogZmFsc2UKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeSubnets']['_options'] = {};
awsim['ec2']['operations']['DescribeSubnets']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeSubnets']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVolumes']['_state'] = JSON.parse(atob('ewogICAgIlZvbHVtZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI1VDExOjM0OjM1LjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTBmYWRiMDIwNDUyN2NkZDA5IiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wMjZmMzg3ZmU3NDYxNzljZSIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wMjZmMzg3ZmU3NDYxNzljZSIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI1VDExOjM0OjM1LjQ5N1oiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI1VDExOjM4OjM5LjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTA3MjM4NDE2NjhhN2NlOWJjIiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wMmZlNTM3ZGM2ZjZjN2ZlZCIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wMmZlNTM3ZGM2ZjZjN2ZlZCIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI1VDExOjM4OjM5LjkwNFoiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFhIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI1VDExOjMzOjA0LjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTBiYWRiZDM1NWIwOTM2MWM3IiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wZWUzZTdkNjQ0YTE4OTBjMiIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wZWUzZTdkNjQ0YTE4OTBjMiIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI1VDExOjMzOjA0LjAwOFoiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFhIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI1VDExOjM2OjM3LjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTA3NTMwYTgwNjIxNjNmNWNkIiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wZDYxOGI4YzQxNjM5NmFlNyIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wZDYxOGI4YzQxNjM5NmFlNyIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI1VDExOjM2OjM3Ljg3N1oiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeVolumes']['_options'] = {};
awsim['ec2']['operations']['DescribeVolumes']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVolumes']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeAddresses']['_state'] = JSON.parse(atob('ewogICAgIkFkZHJlc3NlcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeAddresses']['_options'] = {};
awsim['ec2']['operations']['DescribeAddresses']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeAddresses']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInstances']['_state'] = JSON.parse(atob(''));
awsim['ec2']['operations']['DescribeInstances']['_options'] = {};
awsim['ec2']['operations']['DescribeInstances']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInstances']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInternetGateways']['_state'] = JSON.parse(atob('ewogICAgIkludGVybmV0R2F0ZXdheXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnRzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgICAgICAgICAiVnBjSWQiOiAidnBjLTY4NWQ0ODEwIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkludGVybmV0R2F0ZXdheUlkIjogImlndy00Y2E5YWMzNSIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeInternetGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeInternetGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInternetGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeKeyPairs']['_state'] = JSON.parse(atob('ewogICAgIktleVBhaXJzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIktleU5hbWUiOiAicXdpa0xBQlMtTDE1Mi03MjAyNiIsIAogICAgICAgICAgICAiS2V5RmluZ2VycHJpbnQiOiAiNmU6NjU6OTc6YzI6NDQ6Yzc6OTA6ZjY6OTY6YmE6ZDA6NDg6NmI6YWE6NWI6YTEiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeKeyPairs']['_options'] = {};
awsim['ec2']['operations']['DescribeKeyPairs']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeKeyPairs']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNatGateways']['_state'] = JSON.parse(atob('ewogICAgIk5hdEdhdGV3YXlzIjogW10KfQo='));
awsim['ec2']['operations']['DescribeNatGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeNatGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNatGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNetworkAcls']['_state'] = JSON.parse(atob('ewogICAgIk5ldHdvcmtBY2xzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkFzc29jaWF0aW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWQ0NDgzOGViIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMjEyNmI4NWEiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMWIzMTNkNTIiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTU0NTQ2MDFmIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMjEyNmI4NWEiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMTkzMTNkNTAiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTk5MmIwZWZkIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMjEyNmI4NWEiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMDYzMTNkNGYiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTc2NDBiZDc5IiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMjEyNmI4NWEiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMWEzMTNkNTMiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWE1ZGZiZmY4IiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMjEyNmI4NWEiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMTgzMTNkNTEiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTdkMTA3ZjUyIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMjEyNmI4NWEiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMWQzMTNkNTQiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiTmV0d29ya0FjbElkIjogImFjbC0yMTI2Yjg1YSIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLTY4NWQ0ODEwIiwgCiAgICAgICAgICAgICJUYWdzIjogW10sIAogICAgICAgICAgICAiRW50cmllcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUnVsZU51bWJlciI6IDEwMCwgCiAgICAgICAgICAgICAgICAgICAgIlByb3RvY29sIjogIi0xIiwgCiAgICAgICAgICAgICAgICAgICAgIkVncmVzcyI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMC4wLjAuMC8wIiwgCiAgICAgICAgICAgICAgICAgICAgIlJ1bGVBY3Rpb24iOiAiYWxsb3ciCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUnVsZU51bWJlciI6IDMyNzY3LCAKICAgICAgICAgICAgICAgICAgICAiUHJvdG9jb2wiOiAiLTEiLCAKICAgICAgICAgICAgICAgICAgICAiRWdyZXNzIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJkZW55IgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlJ1bGVOdW1iZXIiOiAxMDAsIAogICAgICAgICAgICAgICAgICAgICJQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJFZ3Jlc3MiOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJhbGxvdyIKICAgICAgICAgICAgICAgIH0sIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJSdWxlTnVtYmVyIjogMzI3NjcsIAogICAgICAgICAgICAgICAgICAgICJQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJFZ3Jlc3MiOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJkZW55IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIklzRGVmYXVsdCI6IHRydWUKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeNetworkAcls']['_options'] = {};
awsim['ec2']['operations']['DescribeNetworkAcls']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNetworkAcls']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeRouteTables']['_state'] = JSON.parse(atob('ewogICAgIlJvdXRlVGFibGVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkFzc29jaWF0aW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWE1ZGZiZmY4IiwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVBc3NvY2lhdGlvbklkIjogInJ0YmFzc29jLTFjNjBjZjYwIiwgCiAgICAgICAgICAgICAgICAgICAgIk1haW4iOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVJZCI6ICJydGItZjYzYzc2OGIiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUm91dGVUYWJsZUFzc29jaWF0aW9uSWQiOiAicnRiYXNzb2MtOWM5OTM2ZTAiLCAKICAgICAgICAgICAgICAgICAgICAiTWFpbiI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLWY2M2M3NjhiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC05OTJiMGVmZCIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy01YjdhZDUyNyIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLWY2M2M3NjhiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC01NDU0NjAxZiIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy1mZjZiYzQ4MyIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLWY2M2M3NjhiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC03NjQwYmQ3OSIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy00YTZmYzAzNiIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLWY2M2M3NjhiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC1kNDQ4MzhlYiIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy0zZTY4Yzc0MiIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLWY2M2M3NjhiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC03ZDEwN2Y1MiIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy02ZjdkZDIxMyIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLWY2M2M3NjhiIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlJvdXRlVGFibGVJZCI6ICJydGItZjYzYzc2OGIiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy02ODVkNDgxMCIsIAogICAgICAgICAgICAiUHJvcGFnYXRpbmdWZ3dzIjogW10sIAogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIlJvdXRlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiR2F0ZXdheUlkIjogImxvY2FsIiwgCiAgICAgICAgICAgICAgICAgICAgIkRlc3RpbmF0aW9uQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgICAgICAgICAiU3RhdGUiOiAiYWN0aXZlIiwgCiAgICAgICAgICAgICAgICAgICAgIk9yaWdpbiI6ICJDcmVhdGVSb3V0ZVRhYmxlIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdhdGV3YXlJZCI6ICJpZ3ctNGNhOWFjMzUiLCAKICAgICAgICAgICAgICAgICAgICAiRGVzdGluYXRpb25DaWRyQmxvY2siOiAiMC4wLjAuMC8wIiwgCiAgICAgICAgICAgICAgICAgICAgIlN0YXRlIjogImFjdGl2ZSIsIAogICAgICAgICAgICAgICAgICAgICJPcmlnaW4iOiAiQ3JlYXRlUm91dGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeRouteTables']['_options'] = {};
awsim['ec2']['operations']['DescribeRouteTables']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeRouteTables']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeSecurityGroups']['_state'] = JSON.parse(atob('ewogICAgIlNlY3VyaXR5R3JvdXBzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIklwUGVybWlzc2lvbnNFZ3Jlc3MiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIklwUHJvdG9jb2wiOiAiLTEiLCAKICAgICAgICAgICAgICAgICAgICAiUHJlZml4TGlzdElkcyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXBSYW5nZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJDaWRySXAiOiAiMC4wLjAuMC8wIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICAgICAgICAgIlVzZXJJZEdyb3VwUGFpcnMiOiBbXSwgCiAgICAgICAgICAgICAgICAgICAgIklwdjZSYW5nZXMiOiBbXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkRlc2NyaXB0aW9uIjogIlBlcm1pdHMgSFRUUCBhbmQgU1NIIGFjY2VzcyB0byB0aGUgd2ViIHNlcnZlci4iLCAKICAgICAgICAgICAgIklwUGVybWlzc2lvbnMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlByZWZpeExpc3RJZHMiOiBbXSwgCiAgICAgICAgICAgICAgICAgICAgIkZyb21Qb3J0IjogODAsIAogICAgICAgICAgICAgICAgICAgICJJcFJhbmdlcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNpZHJJcCI6ICIwLjAuMC4wLzAiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLCAKICAgICAgICAgICAgICAgICAgICAiVG9Qb3J0IjogODAsIAogICAgICAgICAgICAgICAgICAgICJJcFByb3RvY29sIjogInRjcCIsIAogICAgICAgICAgICAgICAgICAgICJVc2VySWRHcm91cFBhaXJzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJJcHY2UmFuZ2VzIjogW10KICAgICAgICAgICAgICAgIH0sIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcmVmaXhMaXN0SWRzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJGcm9tUG9ydCI6IDIyLCAKICAgICAgICAgICAgICAgICAgICAiSXBSYW5nZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJDaWRySXAiOiAiMC4wLjAuMC8wIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICAgICAgICAgIlRvUG9ydCI6IDIyLCAKICAgICAgICAgICAgICAgICAgICAiSXBQcm90b2NvbCI6ICJ0Y3AiLCAKICAgICAgICAgICAgICAgICAgICAiVXNlcklkR3JvdXBQYWlycyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXB2NlJhbmdlcyI6IFtdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiR3JvdXBOYW1lIjogIldlYlNlcnZlclNlY3VyaXR5R3JvdXAiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy02ODVkNDgxMCIsIAogICAgICAgICAgICAiT3duZXJJZCI6ICIzMzg1NTYyMzY3MDAiLCAKICAgICAgICAgICAgIkdyb3VwSWQiOiAic2ctMDE2M2Y3NWExMTk2NzY5MjciCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiSXBQZXJtaXNzaW9uc0VncmVzcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiSXBQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJQcmVmaXhMaXN0SWRzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJJcFJhbmdlcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNpZHJJcCI6ICIwLjAuMC4wLzAiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLCAKICAgICAgICAgICAgICAgICAgICAiVXNlcklkR3JvdXBQYWlycyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXB2NlJhbmdlcyI6IFtdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiZGVmYXVsdCBWUEMgc2VjdXJpdHkgZ3JvdXAiLCAKICAgICAgICAgICAgIklwUGVybWlzc2lvbnMiOiBbXSwgCiAgICAgICAgICAgICJHcm91cE5hbWUiOiAiZGVmYXVsdCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLTY4NWQ0ODEwIiwgCiAgICAgICAgICAgICJPd25lcklkIjogIjMzODU1NjIzNjcwMCIsIAogICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy03MTY5NjEwNSIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeSecurityGroups']['_options'] = {};
awsim['ec2']['operations']['DescribeSecurityGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeSecurityGroups']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeLaunchTemplates']['_state'] = JSON.parse(atob('ewogICAgIkxhdW5jaFRlbXBsYXRlcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeLaunchTemplates']['_options'] = {};
awsim['ec2']['operations']['DescribeLaunchTemplates']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeLaunchTemplates']['_state'], null, 1); };
awsim['ec2']['operations']['DescribePlacementGroups']['_state'] = JSON.parse(atob('ewogICAgIlBsYWNlbWVudEdyb3VwcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribePlacementGroups']['_options'] = {};
awsim['ec2']['operations']['DescribePlacementGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribePlacementGroups']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInternetGateways']['_state'] = JSON.parse(atob('ewogICAgIkludGVybmV0R2F0ZXdheXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnRzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgICAgICAgICAiVnBjSWQiOiAidnBjLTY4NWQ0ODEwIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkludGVybmV0R2F0ZXdheUlkIjogImlndy00Y2E5YWMzNSIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeInternetGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeInternetGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInternetGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeAvailabilityZones']['_state'] = JSON.parse(atob('ewogICAgIkF2YWlsYWJpbGl0eVpvbmVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiWm9uZU5hbWUiOiAidXMtZWFzdC0xYSIsIAogICAgICAgICAgICAiTWVzc2FnZXMiOiBbXSwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogInVzLWVhc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIlpvbmVOYW1lIjogInVzLWVhc3QtMWIiLCAKICAgICAgICAgICAgIk1lc3NhZ2VzIjogW10sIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJab25lTmFtZSI6ICJ1cy1lYXN0LTFjIiwgCiAgICAgICAgICAgICJNZXNzYWdlcyI6IFtdLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAidXMtZWFzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiWm9uZU5hbWUiOiAidXMtZWFzdC0xZCIsIAogICAgICAgICAgICAiTWVzc2FnZXMiOiBbXSwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogInVzLWVhc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIlpvbmVOYW1lIjogInVzLWVhc3QtMWUiLCAKICAgICAgICAgICAgIk1lc3NhZ2VzIjogW10sIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJab25lTmFtZSI6ICJ1cy1lYXN0LTFmIiwgCiAgICAgICAgICAgICJNZXNzYWdlcyI6IFtdLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAidXMtZWFzdC0xIgogICAgICAgIH0KICAgIF0KfQo='));
awsim['ec2']['operations']['DescribeAvailabilityZones']['_options'] = {};
awsim['ec2']['operations']['DescribeAvailabilityZones']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeAvailabilityZones']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_state'] = JSON.parse(atob(''));
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_options'] = {};
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNetworkInterfaces']['_state'], null, 1); };
awsim['iam']['operations']['ListAccessKeys']['_state'] = JSON.parse(atob('ewogICAgIkFjY2Vzc0tleU1ldGFkYXRhIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlVzZXJOYW1lIjogImF3c3N0dWRlbnQiLCAKICAgICAgICAgICAgIlN0YXR1cyI6ICJBY3RpdmUiLCAKICAgICAgICAgICAgIkNyZWF0ZURhdGUiOiAiMjAxOC0wOS0yNVQxMDo1Nzo1NFoiLCAKICAgICAgICAgICAgIkFjY2Vzc0tleUlkIjogIkFLSUFKNFZWTkdNWk1JR1ZSSktRIgogICAgICAgIH0KICAgIF0KfQo='));
awsim['iam']['operations']['ListAccessKeys']['_options'] = {};
awsim['iam']['operations']['ListAccessKeys']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['iam']['operations']['ListAccessKeys']['_state'], null, 1); };
awsim['iam']['operations']['ListInstanceProfiles']['_state'] = JSON.parse(atob('ewogICAgIkluc3RhbmNlUHJvZmlsZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiSW5zdGFuY2VQcm9maWxlSWQiOiAiQUlQQUozR1A1U1hZVUozRDZWQ01RIiwgCiAgICAgICAgICAgICJSb2xlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXNzdW1lUm9sZVBvbGljeURvY3VtZW50IjogewogICAgICAgICAgICAgICAgICAgICAgICAiVmVyc2lvbiI6ICIyMDEyLTEwLTE3IiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJTdGF0ZW1lbnQiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIkFjdGlvbiI6ICJzdHM6QXNzdW1lUm9sZSIsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJFZmZlY3QiOiAiQWxsb3ciLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUHJpbmNpcGFsIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU2VydmljZSI6ICJlYzIuYW1hem9uYXdzLmNvbSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgICAgICAiUm9sZUlkIjogIkFST0FKQVJGTUFDS0pYWFJDRVJCTSIsIAogICAgICAgICAgICAgICAgICAgICJDcmVhdGVEYXRlIjogIjIwMTgtMDktMjVUMTE6MjU6MThaIiwgCiAgICAgICAgICAgICAgICAgICAgIlJvbGVOYW1lIjogIldlYlNlcnZlclJvbGUiLCAKICAgICAgICAgICAgICAgICAgICAiUGF0aCI6ICIvIiwgCiAgICAgICAgICAgICAgICAgICAgIkFybiI6ICJhcm46YXdzOmlhbTo6MzM4NTU2MjM2NzAwOnJvbGUvV2ViU2VydmVyUm9sZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJDcmVhdGVEYXRlIjogIjIwMTgtMDktMjVUMTE6MjU6MThaIiwgCiAgICAgICAgICAgICJJbnN0YW5jZVByb2ZpbGVOYW1lIjogIldlYlNlcnZlclJvbGUiLCAKICAgICAgICAgICAgIlBhdGgiOiAiLyIsIAogICAgICAgICAgICAiQXJuIjogImFybjphd3M6aWFtOjozMzg1NTYyMzY3MDA6aW5zdGFuY2UtcHJvZmlsZS9XZWJTZXJ2ZXJSb2xlIgogICAgICAgIH0KICAgIF0KfQo='));
awsim['iam']['operations']['ListInstanceProfiles']['_options'] = {};
awsim['iam']['operations']['ListInstanceProfiles']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['iam']['operations']['ListInstanceProfiles']['_state'], null, 1); };
awsim['iam']['operations']['ListUsers']['_state'] = JSON.parse(atob('ewogICAgIlVzZXJzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlVzZXJOYW1lIjogImF3c3N0dWRlbnQiLCAKICAgICAgICAgICAgIlBhc3N3b3JkTGFzdFVzZWQiOiAiMjAxOC0wOS0yNVQxMDo1ODowOFoiLCAKICAgICAgICAgICAgIkNyZWF0ZURhdGUiOiAiMjAxNi0wOC0xMVQyMTozNDoxN1oiLCAKICAgICAgICAgICAgIlVzZXJJZCI6ICJBSURBSVJUNUVRV0hNNzdDUEVOWVciLCAKICAgICAgICAgICAgIlBhdGgiOiAiLyIsIAogICAgICAgICAgICAiQXJuIjogImFybjphd3M6aWFtOjozMzg1NTYyMzY3MDA6dXNlci9hd3NzdHVkZW50IgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlVzZXJOYW1lIjogInJvb3QtcXdrbCIsIAogICAgICAgICAgICAiUGF0aCI6ICIvIiwgCiAgICAgICAgICAgICJDcmVhdGVEYXRlIjogIjIwMTYtMDgtMTFUMjE6MzQ6MTdaIiwgCiAgICAgICAgICAgICJVc2VySWQiOiAiQUlEQUpaUEFKREhFM1hLQk9LNVlBIiwgCiAgICAgICAgICAgICJBcm4iOiAiYXJuOmF3czppYW06OjMzODU1NjIzNjcwMDp1c2VyL3Jvb3QtcXdrbCIKICAgICAgICB9CiAgICBdCn0K'));
awsim['iam']['operations']['ListUsers']['_options'] = {};
awsim['iam']['operations']['ListUsers']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['iam']['operations']['ListUsers']['_state'], null, 1); };
awsim['iam']['operations']['ListRoles']['_state'] = JSON.parse(atob(''));
awsim['iam']['operations']['ListRoles']['_options'] = {};
awsim['iam']['operations']['ListRoles']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['iam']['operations']['ListRoles']['_state'], null, 1); };
awsim['iam']['operations']['ListAttachedRolePolicies']['_options'] = {};
awsim['iam']['operations']['ListAttachedRolePolicies']['_state'] = {};
awsim['iam']['operations']['ListAttachedRolePolicies']['_state']['--role-name WebServerRole'] = JSON.parse(atob('ewogICAgIkF0dGFjaGVkUG9saWNpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiUG9saWN5TmFtZSI6ICJBbWF6b25EeW5hbW9EQlJlYWRPbmx5QWNjZXNzIiwgCiAgICAgICAgICAgICJQb2xpY3lBcm4iOiAiYXJuOmF3czppYW06OmF3czpwb2xpY3kvQW1hem9uRHluYW1vREJSZWFkT25seUFjY2VzcyIKICAgICAgICB9CiAgICBdCn0K'));
awsim['iam']['operations']['ListAttachedRolePolicies']['_options']['--role-name'] = () => {        var result = [];        for (var key in awsim['iam']['operations']['ListAttachedRolePolicies']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['iam']['operations']['ListAttachedRolePolicies']['_execute'] = (command) => {	var optionName = '--role-name'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --role-name: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['iam']['operations']['ListAttachedRolePolicies']['_state']['--role-name ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the ListAttachedRolePolicies operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['iam']['operations']['ListInstanceProfilesForRole']['_options'] = {};
awsim['iam']['operations']['ListInstanceProfilesForRole']['_state'] = {};
awsim['iam']['operations']['ListInstanceProfilesForRole']['_state']['--role-name WebServerRole'] = JSON.parse(atob('ewogICAgIkluc3RhbmNlUHJvZmlsZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiSW5zdGFuY2VQcm9maWxlSWQiOiAiQUlQQUozR1A1U1hZVUozRDZWQ01RIiwgCiAgICAgICAgICAgICJSb2xlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXNzdW1lUm9sZVBvbGljeURvY3VtZW50IjogewogICAgICAgICAgICAgICAgICAgICAgICAiVmVyc2lvbiI6ICIyMDEyLTEwLTE3IiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJTdGF0ZW1lbnQiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIkFjdGlvbiI6ICJzdHM6QXNzdW1lUm9sZSIsIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJFZmZlY3QiOiAiQWxsb3ciLCAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiUHJpbmNpcGFsIjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiU2VydmljZSI6ICJlYzIuYW1hem9uYXdzLmNvbSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgICAgICAiUm9sZUlkIjogIkFST0FKQVJGTUFDS0pYWFJDRVJCTSIsIAogICAgICAgICAgICAgICAgICAgICJDcmVhdGVEYXRlIjogIjIwMTgtMDktMjVUMTE6MjU6MThaIiwgCiAgICAgICAgICAgICAgICAgICAgIlJvbGVOYW1lIjogIldlYlNlcnZlclJvbGUiLCAKICAgICAgICAgICAgICAgICAgICAiUGF0aCI6ICIvIiwgCiAgICAgICAgICAgICAgICAgICAgIkFybiI6ICJhcm46YXdzOmlhbTo6MzM4NTU2MjM2NzAwOnJvbGUvV2ViU2VydmVyUm9sZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJDcmVhdGVEYXRlIjogIjIwMTgtMDktMjVUMTE6MjU6MThaIiwgCiAgICAgICAgICAgICJJbnN0YW5jZVByb2ZpbGVOYW1lIjogIldlYlNlcnZlclJvbGUiLCAKICAgICAgICAgICAgIlBhdGgiOiAiLyIsIAogICAgICAgICAgICAiQXJuIjogImFybjphd3M6aWFtOjozMzg1NTYyMzY3MDA6aW5zdGFuY2UtcHJvZmlsZS9XZWJTZXJ2ZXJSb2xlIgogICAgICAgIH0KICAgIF0KfQo='));
awsim['iam']['operations']['ListInstanceProfilesForRole']['_options']['--role-name'] = () => {        var result = [];        for (var key in awsim['iam']['operations']['ListInstanceProfilesForRole']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['iam']['operations']['ListInstanceProfilesForRole']['_execute'] = (command) => {	var optionName = '--role-name'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --role-name: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['iam']['operations']['ListInstanceProfilesForRole']['_state']['--role-name ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the ListInstanceProfilesForRole operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['iam']['operations']['ListRolePolicies']['_options'] = {};
awsim['iam']['operations']['ListRolePolicies']['_state'] = {};
awsim['iam']['operations']['ListRolePolicies']['_state']['--role-name WebServerRole'] = JSON.parse(atob('ewogICAgIlBvbGljeU5hbWVzIjogW10KfQo='));
awsim['iam']['operations']['ListRolePolicies']['_options']['--role-name'] = () => {        var result = [];        for (var key in awsim['iam']['operations']['ListRolePolicies']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['iam']['operations']['ListRolePolicies']['_execute'] = (command) => {	var optionName = '--role-name'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --role-name: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['iam']['operations']['ListRolePolicies']['_state']['--role-name ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the ListRolePolicies operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['elbv2']['operations']['DescribeLoadBalancers']['_state'] = JSON.parse(atob('ewogICAgIkxvYWRCYWxhbmNlcnMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiSXBBZGRyZXNzVHlwZSI6ICJpcHY0IiwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtNjg1ZDQ4MTAiLCAKICAgICAgICAgICAgIkxvYWRCYWxhbmNlckFybiI6ICJhcm46YXdzOmVsYXN0aWNsb2FkYmFsYW5jaW5nOnVzLWVhc3QtMTozMzg1NTYyMzY3MDA6bG9hZGJhbGFuY2VyL2FwcC9XZWJTZXJ2ZXJMb2FkQmFsYW5jZXIvMGY4Y2I0OTJmYmJhMWUwYyIsIAogICAgICAgICAgICAiU3RhdGUiOiB7CiAgICAgICAgICAgICAgICAiQ29kZSI6ICJhY3RpdmUiCiAgICAgICAgICAgIH0sIAogICAgICAgICAgICAiRE5TTmFtZSI6ICJXZWJTZXJ2ZXJMb2FkQmFsYW5jZXItMTYxMTQ1NjQwMy51cy1lYXN0LTEuZWxiLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlNlY3VyaXR5R3JvdXBzIjogWwogICAgICAgICAgICAgICAgInNnLTAxNjNmNzVhMTE5Njc2OTI3IgogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkxvYWRCYWxhbmNlck5hbWUiOiAiV2ViU2VydmVyTG9hZEJhbGFuY2VyIiwgCiAgICAgICAgICAgICJDcmVhdGVkVGltZSI6ICIyMDE4LTA5LTI1VDExOjIwOjUxLjU2MFoiLCAKICAgICAgICAgICAgIlNjaGVtZSI6ICJpbnRlcm5ldC1mYWNpbmciLCAKICAgICAgICAgICAgIlR5cGUiOiAiYXBwbGljYXRpb24iLCAKICAgICAgICAgICAgIkNhbm9uaWNhbEhvc3RlZFpvbmVJZCI6ICJaMzVTWERPVFJRN1g3SyIsIAogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZXMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC01NDU0NjAxZiIsIAogICAgICAgICAgICAgICAgICAgICJab25lTmFtZSI6ICJ1cy1lYXN0LTFiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC03ZDEwN2Y1MiIsIAogICAgICAgICAgICAgICAgICAgICJab25lTmFtZSI6ICJ1cy1lYXN0LTFhIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['elbv2']['operations']['DescribeLoadBalancers']['_options'] = {};
awsim['elbv2']['operations']['DescribeLoadBalancers']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['elbv2']['operations']['DescribeLoadBalancers']['_state'], null, 1); };
awsim['elbv2']['operations']['DescribeTargetGroups']['_state'] = JSON.parse(atob('ewogICAgIlRhcmdldEdyb3VwcyI6IFsKICAgICAgICB7CiAgICAgICAgICAgICJIZWFsdGhDaGVja1BhdGgiOiAiLyIsIAogICAgICAgICAgICAiSGVhbHRoQ2hlY2tJbnRlcnZhbFNlY29uZHMiOiAzMCwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtNjg1ZDQ4MTAiLCAKICAgICAgICAgICAgIlByb3RvY29sIjogIkhUVFAiLCAKICAgICAgICAgICAgIkhlYWx0aENoZWNrVGltZW91dFNlY29uZHMiOiA1LCAKICAgICAgICAgICAgIlRhcmdldFR5cGUiOiAiaW5zdGFuY2UiLCAKICAgICAgICAgICAgIkhlYWx0aENoZWNrUHJvdG9jb2wiOiAiSFRUUCIsIAogICAgICAgICAgICAiTG9hZEJhbGFuY2VyQXJucyI6IFsKICAgICAgICAgICAgICAgICJhcm46YXdzOmVsYXN0aWNsb2FkYmFsYW5jaW5nOnVzLWVhc3QtMTozMzg1NTYyMzY3MDA6bG9hZGJhbGFuY2VyL2FwcC9XZWJTZXJ2ZXJMb2FkQmFsYW5jZXIvMGY4Y2I0OTJmYmJhMWUwYyIKICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJVbmhlYWx0aHlUaHJlc2hvbGRDb3VudCI6IDIsIAogICAgICAgICAgICAiSGVhbHRoeVRocmVzaG9sZENvdW50IjogNSwgCiAgICAgICAgICAgICJUYXJnZXRHcm91cEFybiI6ICJhcm46YXdzOmVsYXN0aWNsb2FkYmFsYW5jaW5nOnVzLWVhc3QtMTozMzg1NTYyMzY3MDA6dGFyZ2V0Z3JvdXAvV2ViU2VydmVyVGFyZ2V0R3JvdXAvYTYyZDhkNTVjMmUyZDJlNSIsIAogICAgICAgICAgICAiTWF0Y2hlciI6IHsKICAgICAgICAgICAgICAgICJIdHRwQ29kZSI6ICIyMDAiCiAgICAgICAgICAgIH0sIAogICAgICAgICAgICAiSGVhbHRoQ2hlY2tQb3J0IjogInRyYWZmaWMtcG9ydCIsIAogICAgICAgICAgICAiUG9ydCI6IDgwLCAKICAgICAgICAgICAgIlRhcmdldEdyb3VwTmFtZSI6ICJXZWJTZXJ2ZXJUYXJnZXRHcm91cCIKICAgICAgICB9CiAgICBdCn0K'));
awsim['elbv2']['operations']['DescribeTargetGroups']['_options'] = {};
awsim['elbv2']['operations']['DescribeTargetGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['elbv2']['operations']['DescribeTargetGroups']['_state'], null, 1); };
awsim['elbv2']['operations']['DescribeLoadBalancerAttributes']['_options'] = {};
awsim['elbv2']['operations']['DescribeLoadBalancerAttributes']['_state'] = {};
awsim['elbv2']['operations']['DescribeLoadBalancerAttributes']['_state']['--load-balancer-arn arn:aws:elasticloadbalancing:us-east-1:338556236700:loadbalancer/app/WebServerLoadBalancer/0f8cb492fbba1e0c'] = JSON.parse(atob('ewogICAgIkF0dHJpYnV0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVmFsdWUiOiAiIiwgCiAgICAgICAgICAgICJLZXkiOiAiYWNjZXNzX2xvZ3MuczMucHJlZml4IgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlZhbHVlIjogIiIsIAogICAgICAgICAgICAiS2V5IjogImFjY2Vzc19sb2dzLnMzLmJ1Y2tldCIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJWYWx1ZSI6ICJmYWxzZSIsIAogICAgICAgICAgICAiS2V5IjogImFjY2Vzc19sb2dzLnMzLmVuYWJsZWQiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiVmFsdWUiOiAidHJ1ZSIsIAogICAgICAgICAgICAiS2V5IjogInJvdXRpbmcuaHR0cDIuZW5hYmxlZCIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJWYWx1ZSI6ICJmYWxzZSIsIAogICAgICAgICAgICAiS2V5IjogImRlbGV0aW9uX3Byb3RlY3Rpb24uZW5hYmxlZCIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJWYWx1ZSI6ICI2MCIsIAogICAgICAgICAgICAiS2V5IjogImlkbGVfdGltZW91dC50aW1lb3V0X3NlY29uZHMiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['elbv2']['operations']['DescribeLoadBalancerAttributes']['_options']['--load-balancer-arn'] = () => {        var result = [];        for (var key in awsim['elbv2']['operations']['DescribeLoadBalancerAttributes']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['elbv2']['operations']['DescribeLoadBalancerAttributes']['_execute'] = (command) => {	var optionName = '--load-balancer-arn'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --load-balancer-arn: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['elbv2']['operations']['DescribeLoadBalancerAttributes']['_state']['--load-balancer-arn ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the DescribeLoadBalancerAttributes operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['elbv2']['operations']['DescribeTargetGroupAttributes']['_options'] = {};
awsim['elbv2']['operations']['DescribeTargetGroupAttributes']['_state'] = {};
awsim['elbv2']['operations']['DescribeTargetGroupAttributes']['_state']['--target-group-arn arn:aws:elasticloadbalancing:us-east-1:338556236700:targetgroup/WebServerTargetGroup/a62d8d55c2e2d2e5'] = JSON.parse(atob('ewogICAgIkF0dHJpYnV0ZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVmFsdWUiOiAiZmFsc2UiLCAKICAgICAgICAgICAgIktleSI6ICJzdGlja2luZXNzLmVuYWJsZWQiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiVmFsdWUiOiAiMzAwIiwgCiAgICAgICAgICAgICJLZXkiOiAiZGVyZWdpc3RyYXRpb25fZGVsYXkudGltZW91dF9zZWNvbmRzIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlZhbHVlIjogImxiX2Nvb2tpZSIsIAogICAgICAgICAgICAiS2V5IjogInN0aWNraW5lc3MudHlwZSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJWYWx1ZSI6ICI4NjQwMCIsIAogICAgICAgICAgICAiS2V5IjogInN0aWNraW5lc3MubGJfY29va2llLmR1cmF0aW9uX3NlY29uZHMiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiVmFsdWUiOiAiMCIsIAogICAgICAgICAgICAiS2V5IjogInNsb3dfc3RhcnQuZHVyYXRpb25fc2Vjb25kcyIKICAgICAgICB9CiAgICBdCn0K'));
awsim['elbv2']['operations']['DescribeTargetGroupAttributes']['_options']['--target-group-arn'] = () => {        var result = [];        for (var key in awsim['elbv2']['operations']['DescribeTargetGroupAttributes']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['elbv2']['operations']['DescribeTargetGroupAttributes']['_execute'] = (command) => {	var optionName = '--target-group-arn'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --target-group-arn: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['elbv2']['operations']['DescribeTargetGroupAttributes']['_state']['--target-group-arn ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the DescribeTargetGroupAttributes operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['autoscaling']['operations']['DescribeAutoScalingGroups']['_state'] = JSON.parse(atob('ewogICAgIkF1dG9TY2FsaW5nR3JvdXBzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkF1dG9TY2FsaW5nR3JvdXBBUk4iOiAiYXJuOmF3czphdXRvc2NhbGluZzp1cy1lYXN0LTE6MzM4NTU2MjM2NzAwOmF1dG9TY2FsaW5nR3JvdXA6ZmU3YWU1ODItMWM1OS00NDQ0LWJkNjQtMDRiYjExMTMwNjhkOmF1dG9TY2FsaW5nR3JvdXBOYW1lL1dlYlNlcnZlckF1dG9TY2FsaW5nR3JvdXAiLCAKICAgICAgICAgICAgIlNlcnZpY2VMaW5rZWRSb2xlQVJOIjogImFybjphd3M6aWFtOjozMzg1NTYyMzY3MDA6cm9sZS9hd3Mtc2VydmljZS1yb2xlL2F1dG9zY2FsaW5nLmFtYXpvbmF3cy5jb20vQVdTU2VydmljZVJvbGVGb3JBdXRvU2NhbGluZyIsIAogICAgICAgICAgICAiVGFyZ2V0R3JvdXBBUk5zIjogWwogICAgICAgICAgICAgICAgImFybjphd3M6ZWxhc3RpY2xvYWRiYWxhbmNpbmc6dXMtZWFzdC0xOjMzODU1NjIzNjcwMDp0YXJnZXRncm91cC9XZWJTZXJ2ZXJUYXJnZXRHcm91cC9hNjJkOGQ1NWMyZTJkMmU1IgogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlN1c3BlbmRlZFByb2Nlc3NlcyI6IFtdLCAKICAgICAgICAgICAgIkRlc2lyZWRDYXBhY2l0eSI6IDQsIAogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIkVuYWJsZWRNZXRyaWNzIjogW10sIAogICAgICAgICAgICAiTG9hZEJhbGFuY2VyTmFtZXMiOiBbXSwgCiAgICAgICAgICAgICJBdXRvU2NhbGluZ0dyb3VwTmFtZSI6ICJXZWJTZXJ2ZXJBdXRvU2NhbGluZ0dyb3VwIiwgCiAgICAgICAgICAgICJEZWZhdWx0Q29vbGRvd24iOiAzMDAsIAogICAgICAgICAgICAiTWluU2l6ZSI6IDQsIAogICAgICAgICAgICAiSW5zdGFuY2VzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcm90ZWN0ZWRGcm9tU2NhbGVJbiI6IGZhbHNlLCAKICAgICAgICAgICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICAgICAgICAgIkluc3RhbmNlSWQiOiAiaS0wNzIzODQxNjY4YTdjZTliYyIsIAogICAgICAgICAgICAgICAgICAgICJIZWFsdGhTdGF0dXMiOiAiSGVhbHRoeSIsIAogICAgICAgICAgICAgICAgICAgICJMaWZlY3ljbGVTdGF0ZSI6ICJJblNlcnZpY2UiLCAKICAgICAgICAgICAgICAgICAgICAiTGF1bmNoQ29uZmlndXJhdGlvbk5hbWUiOiAiV2ViU2VydmVyTGF1bmNoQ29uZmlndXJhdGlvbiIKICAgICAgICAgICAgICAgIH0sIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcm90ZWN0ZWRGcm9tU2NhbGVJbiI6IGZhbHNlLCAKICAgICAgICAgICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFhIiwgCiAgICAgICAgICAgICAgICAgICAgIkluc3RhbmNlSWQiOiAiaS0wNzUzMGE4MDYyMTYzZjVjZCIsIAogICAgICAgICAgICAgICAgICAgICJIZWFsdGhTdGF0dXMiOiAiSGVhbHRoeSIsIAogICAgICAgICAgICAgICAgICAgICJMaWZlY3ljbGVTdGF0ZSI6ICJJblNlcnZpY2UiLCAKICAgICAgICAgICAgICAgICAgICAiTGF1bmNoQ29uZmlndXJhdGlvbk5hbWUiOiAiV2ViU2VydmVyTGF1bmNoQ29uZmlndXJhdGlvbiIKICAgICAgICAgICAgICAgIH0sIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcm90ZWN0ZWRGcm9tU2NhbGVJbiI6IGZhbHNlLCAKICAgICAgICAgICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFhIiwgCiAgICAgICAgICAgICAgICAgICAgIkluc3RhbmNlSWQiOiAiaS0wYmFkYmQzNTViMDkzNjFjNyIsIAogICAgICAgICAgICAgICAgICAgICJIZWFsdGhTdGF0dXMiOiAiSGVhbHRoeSIsIAogICAgICAgICAgICAgICAgICAgICJMaWZlY3ljbGVTdGF0ZSI6ICJJblNlcnZpY2UiLCAKICAgICAgICAgICAgICAgICAgICAiTGF1bmNoQ29uZmlndXJhdGlvbk5hbWUiOiAiV2ViU2VydmVyTGF1bmNoQ29uZmlndXJhdGlvbiIKICAgICAgICAgICAgICAgIH0sIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcm90ZWN0ZWRGcm9tU2NhbGVJbiI6IGZhbHNlLCAKICAgICAgICAgICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICAgICAgICAgIkluc3RhbmNlSWQiOiAiaS0wZmFkYjAyMDQ1MjdjZGQwOSIsIAogICAgICAgICAgICAgICAgICAgICJIZWFsdGhTdGF0dXMiOiAiSGVhbHRoeSIsIAogICAgICAgICAgICAgICAgICAgICJMaWZlY3ljbGVTdGF0ZSI6ICJJblNlcnZpY2UiLCAKICAgICAgICAgICAgICAgICAgICAiTGF1bmNoQ29uZmlndXJhdGlvbk5hbWUiOiAiV2ViU2VydmVyTGF1bmNoQ29uZmlndXJhdGlvbiIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJNYXhTaXplIjogNCwgCiAgICAgICAgICAgICJWUENab25lSWRlbnRpZmllciI6ICJzdWJuZXQtNTQ1NDYwMWYsc3VibmV0LTdkMTA3ZjUyIiwgCiAgICAgICAgICAgICJIZWFsdGhDaGVja0dyYWNlUGVyaW9kIjogMzAwLCAKICAgICAgICAgICAgIlRlcm1pbmF0aW9uUG9saWNpZXMiOiBbCiAgICAgICAgICAgICAgICAiRGVmYXVsdCIKICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJMYXVuY2hDb25maWd1cmF0aW9uTmFtZSI6ICJXZWJTZXJ2ZXJMYXVuY2hDb25maWd1cmF0aW9uIiwgCiAgICAgICAgICAgICJDcmVhdGVkVGltZSI6ICIyMDE4LTA5LTI1VDExOjI3OjUzLjUwNloiLCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmVzIjogWwogICAgICAgICAgICAgICAgInVzLWVhc3QtMWEiLCAKICAgICAgICAgICAgICAgICJ1cy1lYXN0LTFiIgogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkhlYWx0aENoZWNrVHlwZSI6ICJFQzIiLCAKICAgICAgICAgICAgIk5ld0luc3RhbmNlc1Byb3RlY3RlZEZyb21TY2FsZUluIjogZmFsc2UKICAgICAgICB9CiAgICBdCn0K'));
awsim['autoscaling']['operations']['DescribeAutoScalingGroups']['_options'] = {};
awsim['autoscaling']['operations']['DescribeAutoScalingGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['autoscaling']['operations']['DescribeAutoScalingGroups']['_state'], null, 1); };
awsim['autoscaling']['operations']['DescribeAutoScalingInstances']['_state'] = JSON.parse(atob('ewogICAgIkF1dG9TY2FsaW5nSW5zdGFuY2VzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlByb3RlY3RlZEZyb21TY2FsZUluIjogZmFsc2UsIAogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJJbnN0YW5jZUlkIjogImktMDcyMzg0MTY2OGE3Y2U5YmMiLCAKICAgICAgICAgICAgIkF1dG9TY2FsaW5nR3JvdXBOYW1lIjogIldlYlNlcnZlckF1dG9TY2FsaW5nR3JvdXAiLCAKICAgICAgICAgICAgIkhlYWx0aFN0YXR1cyI6ICJIRUFMVEhZIiwgCiAgICAgICAgICAgICJMaWZlY3ljbGVTdGF0ZSI6ICJJblNlcnZpY2UiLCAKICAgICAgICAgICAgIkxhdW5jaENvbmZpZ3VyYXRpb25OYW1lIjogIldlYlNlcnZlckxhdW5jaENvbmZpZ3VyYXRpb24iCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiUHJvdGVjdGVkRnJvbVNjYWxlSW4iOiBmYWxzZSwgCiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogInVzLWVhc3QtMWEiLCAKICAgICAgICAgICAgIkluc3RhbmNlSWQiOiAiaS0wNzUzMGE4MDYyMTYzZjVjZCIsIAogICAgICAgICAgICAiQXV0b1NjYWxpbmdHcm91cE5hbWUiOiAiV2ViU2VydmVyQXV0b1NjYWxpbmdHcm91cCIsIAogICAgICAgICAgICAiSGVhbHRoU3RhdHVzIjogIkhFQUxUSFkiLCAKICAgICAgICAgICAgIkxpZmVjeWNsZVN0YXRlIjogIkluU2VydmljZSIsIAogICAgICAgICAgICAiTGF1bmNoQ29uZmlndXJhdGlvbk5hbWUiOiAiV2ViU2VydmVyTGF1bmNoQ29uZmlndXJhdGlvbiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJQcm90ZWN0ZWRGcm9tU2NhbGVJbiI6IGZhbHNlLCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAidXMtZWFzdC0xYSIsIAogICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTBiYWRiZDM1NWIwOTM2MWM3IiwgCiAgICAgICAgICAgICJBdXRvU2NhbGluZ0dyb3VwTmFtZSI6ICJXZWJTZXJ2ZXJBdXRvU2NhbGluZ0dyb3VwIiwgCiAgICAgICAgICAgICJIZWFsdGhTdGF0dXMiOiAiSEVBTFRIWSIsIAogICAgICAgICAgICAiTGlmZWN5Y2xlU3RhdGUiOiAiSW5TZXJ2aWNlIiwgCiAgICAgICAgICAgICJMYXVuY2hDb25maWd1cmF0aW9uTmFtZSI6ICJXZWJTZXJ2ZXJMYXVuY2hDb25maWd1cmF0aW9uIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlByb3RlY3RlZEZyb21TY2FsZUluIjogZmFsc2UsIAogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJJbnN0YW5jZUlkIjogImktMGZhZGIwMjA0NTI3Y2RkMDkiLCAKICAgICAgICAgICAgIkF1dG9TY2FsaW5nR3JvdXBOYW1lIjogIldlYlNlcnZlckF1dG9TY2FsaW5nR3JvdXAiLCAKICAgICAgICAgICAgIkhlYWx0aFN0YXR1cyI6ICJIRUFMVEhZIiwgCiAgICAgICAgICAgICJMaWZlY3ljbGVTdGF0ZSI6ICJJblNlcnZpY2UiLCAKICAgICAgICAgICAgIkxhdW5jaENvbmZpZ3VyYXRpb25OYW1lIjogIldlYlNlcnZlckxhdW5jaENvbmZpZ3VyYXRpb24iCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['autoscaling']['operations']['DescribeAutoScalingInstances']['_options'] = {};
awsim['autoscaling']['operations']['DescribeAutoScalingInstances']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['autoscaling']['operations']['DescribeAutoScalingInstances']['_state'], null, 1); };
awsim['autoscaling']['operations']['DescribeLaunchConfigurations']['_state'] = JSON.parse(atob('ewogICAgIkxhdW5jaENvbmZpZ3VyYXRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlVzZXJEYXRhIjogIkl5RXZZbWx1TDJKaGMyZ0tlWFZ0SUhWd1pHRjBaU0F0ZVFwNWRXMGdhVzV6ZEdGc2JDQm9kSFJ3WkNBdGVRcHplWE4wWlcxamRHd2djM1JoY25RZ2FIUjBjR1FLYzNsemRHVnRZM1JzSUdWdVlXSnNaU0JvZEhSd1pBbz0iLCAKICAgICAgICAgICAgIklhbUluc3RhbmNlUHJvZmlsZSI6ICJXZWJTZXJ2ZXJSb2xlIiwgCiAgICAgICAgICAgICJFYnNPcHRpbWl6ZWQiOiBmYWxzZSwgCiAgICAgICAgICAgICJMYXVuY2hDb25maWd1cmF0aW9uQVJOIjogImFybjphd3M6YXV0b3NjYWxpbmc6dXMtZWFzdC0xOjMzODU1NjIzNjcwMDpsYXVuY2hDb25maWd1cmF0aW9uOjM1YmFhMWY5LTE0MzUtNGYzOS05M2FhLTk3YTE0OTEyOGQ3NjpsYXVuY2hDb25maWd1cmF0aW9uTmFtZS9XZWJTZXJ2ZXJMYXVuY2hDb25maWd1cmF0aW9uIiwgCiAgICAgICAgICAgICJJbnN0YW5jZU1vbml0b3JpbmciOiB7CiAgICAgICAgICAgICAgICAiRW5hYmxlZCI6IGZhbHNlCiAgICAgICAgICAgIH0sIAogICAgICAgICAgICAiQ2xhc3NpY0xpbmtWUENTZWN1cml0eUdyb3VwcyI6IFtdLCAKICAgICAgICAgICAgIkNyZWF0ZWRUaW1lIjogIjIwMTgtMDktMjVUMTE6Mjc6MTguMzE0WiIsIAogICAgICAgICAgICAiQmxvY2tEZXZpY2VNYXBwaW5ncyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiRGV2aWNlTmFtZSI6ICIvZGV2L3h2ZGEiLCAKICAgICAgICAgICAgICAgICAgICAiRWJzIjogewogICAgICAgICAgICAgICAgICAgICAgICAiRGVsZXRlT25UZXJtaW5hdGlvbiI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICAgICAiU25hcHNob3RJZCI6ICJzbmFwLTBlODQ4YjY5MmMzYzdkZTllIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJWb2x1bWVTaXplIjogOCwgCiAgICAgICAgICAgICAgICAgICAgICAgICJWb2x1bWVUeXBlIjogImdwMiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiS2V5TmFtZSI6ICJxd2lrTEFCUy1MMTUyLTcyMDI2IiwgCiAgICAgICAgICAgICJTZWN1cml0eUdyb3VwcyI6IFsKICAgICAgICAgICAgICAgICJzZy0wMTYzZjc1YTExOTY3NjkyNyIKICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJMYXVuY2hDb25maWd1cmF0aW9uTmFtZSI6ICJXZWJTZXJ2ZXJMYXVuY2hDb25maWd1cmF0aW9uIiwgCiAgICAgICAgICAgICJLZXJuZWxJZCI6ICIiLCAKICAgICAgICAgICAgIlJhbWRpc2tJZCI6ICIiLCAKICAgICAgICAgICAgIkltYWdlSWQiOiAiYW1pLTA0NjgxYTFkYmQ3OTY3NWE1IiwgCiAgICAgICAgICAgICJJbnN0YW5jZVR5cGUiOiAidDIubWljcm8iCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['autoscaling']['operations']['DescribeLaunchConfigurations']['_options'] = {};
awsim['autoscaling']['operations']['DescribeLaunchConfigurations']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['autoscaling']['operations']['DescribeLaunchConfigurations']['_state'], null, 1); };
awsim['autoscaling']['operations']['DescribeLoadBalancerTargetGroups']['_options'] = {};
awsim['autoscaling']['operations']['DescribeLoadBalancerTargetGroups']['_state'] = {};
awsim['autoscaling']['operations']['DescribeLoadBalancerTargetGroups']['_state']['--auto-scaling-group-name WebServerAutoScalingGroup'] = JSON.parse(atob('ewogICAgIkxvYWRCYWxhbmNlclRhcmdldEdyb3VwcyI6IFsKICAgICAgICB7CiAgICAgICAgICAgICJMb2FkQmFsYW5jZXJUYXJnZXRHcm91cEFSTiI6ICJhcm46YXdzOmVsYXN0aWNsb2FkYmFsYW5jaW5nOnVzLWVhc3QtMTozMzg1NTYyMzY3MDA6dGFyZ2V0Z3JvdXAvV2ViU2VydmVyVGFyZ2V0R3JvdXAvYTYyZDhkNTVjMmUyZDJlNSIsIAogICAgICAgICAgICAiU3RhdGUiOiAiQWRkZWQiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['autoscaling']['operations']['DescribeLoadBalancerTargetGroups']['_options']['--auto-scaling-group-name'] = () => {        var result = [];        for (var key in awsim['autoscaling']['operations']['DescribeLoadBalancerTargetGroups']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['autoscaling']['operations']['DescribeLoadBalancerTargetGroups']['_execute'] = (command) => {	var optionName = '--auto-scaling-group-name'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --auto-scaling-group-name: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['autoscaling']['operations']['DescribeLoadBalancerTargetGroups']['_state']['--auto-scaling-group-name ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the DescribeLoadBalancerTargetGroups operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['autoscaling']['operations']['DescribeLoadBalancers']['_options'] = {};
awsim['autoscaling']['operations']['DescribeLoadBalancers']['_state'] = {};
awsim['autoscaling']['operations']['DescribeLoadBalancers']['_state']['--auto-scaling-group-name WebServerAutoScalingGroup'] = JSON.parse(atob('ewogICAgIkxvYWRCYWxhbmNlcnMiOiBbXQp9Cg=='));
awsim['autoscaling']['operations']['DescribeLoadBalancers']['_options']['--auto-scaling-group-name'] = () => {        var result = [];        for (var key in awsim['autoscaling']['operations']['DescribeLoadBalancers']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['autoscaling']['operations']['DescribeLoadBalancers']['_execute'] = (command) => {	var optionName = '--auto-scaling-group-name'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --auto-scaling-group-name: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['autoscaling']['operations']['DescribeLoadBalancers']['_state']['--auto-scaling-group-name ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the DescribeLoadBalancers operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['dynamodb']['operations']['ListTables']['_state'] = JSON.parse(atob('ewogICAgIlRhYmxlTmFtZXMiOiBbCiAgICAgICAgIlZlcnlTZWNyZXRUYWJsZSIsIAogICAgICAgICJXZWJTZXJ2ZXJEQiIKICAgIF0KfQo='));
awsim['dynamodb']['operations']['ListTables']['_options'] = {};
awsim['dynamodb']['operations']['ListTables']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['dynamodb']['operations']['ListTables']['_state'], null, 1); };
awsim['dynamodb']['operations']['DescribeTable']['_options'] = {};
awsim['dynamodb']['operations']['DescribeTable']['_state'] = {};
awsim['dynamodb']['operations']['DescribeTable']['_state']['--table-name VerySecretTable'] = JSON.parse(atob('ewogICAgIlRhYmxlIjogewogICAgICAgICJUYWJsZUFybiI6ICJhcm46YXdzOmR5bmFtb2RiOnVzLWVhc3QtMTozMzg1NTYyMzY3MDA6dGFibGUvVmVyeVNlY3JldFRhYmxlIiwgCiAgICAgICAgIkF0dHJpYnV0ZURlZmluaXRpb25zIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiQXR0cmlidXRlTmFtZSI6ICJTZWNyZXRLZXkiLCAKICAgICAgICAgICAgICAgICJBdHRyaWJ1dGVUeXBlIjogIlMiCiAgICAgICAgICAgIH0KICAgICAgICBdLCAKICAgICAgICAiUHJvdmlzaW9uZWRUaHJvdWdocHV0IjogewogICAgICAgICAgICAiTnVtYmVyT2ZEZWNyZWFzZXNUb2RheSI6IDAsIAogICAgICAgICAgICAiV3JpdGVDYXBhY2l0eVVuaXRzIjogNSwgCiAgICAgICAgICAgICJSZWFkQ2FwYWNpdHlVbml0cyI6IDUKICAgICAgICB9LCAKICAgICAgICAiVGFibGVTaXplQnl0ZXMiOiAwLCAKICAgICAgICAiVGFibGVOYW1lIjogIlZlcnlTZWNyZXRUYWJsZSIsIAogICAgICAgICJUYWJsZVN0YXR1cyI6ICJBQ1RJVkUiLCAKICAgICAgICAiVGFibGVJZCI6ICJhYWUzNTM3ZC0xZDM2LTRhNWQtYWEwNS1lMTc0OGM5YjMzMWIiLCAKICAgICAgICAiS2V5U2NoZW1hIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiS2V5VHlwZSI6ICJIQVNIIiwgCiAgICAgICAgICAgICAgICAiQXR0cmlidXRlTmFtZSI6ICJTZWNyZXRLZXkiCiAgICAgICAgICAgIH0KICAgICAgICBdLCAKICAgICAgICAiSXRlbUNvdW50IjogMCwgCiAgICAgICAgIkNyZWF0aW9uRGF0ZVRpbWUiOiAxNTM3ODc1NDk4LjI3NwogICAgfQp9Cg=='));
awsim['dynamodb']['operations']['DescribeTable']['_options']['--table-name'] = () => {        var result = [];        for (var key in awsim['dynamodb']['operations']['DescribeTable']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['dynamodb']['operations']['DescribeTable']['_execute'] = (command) => {	var optionName = '--table-name'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --table-name: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['dynamodb']['operations']['DescribeTable']['_state']['--table-name ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the DescribeTable operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
awsim['dynamodb']['operations']['DescribeTable']['_state']['--table-name WebServerDB'] = JSON.parse(atob('ewogICAgIlRhYmxlIjogewogICAgICAgICJUYWJsZUFybiI6ICJhcm46YXdzOmR5bmFtb2RiOnVzLWVhc3QtMTozMzg1NTYyMzY3MDA6dGFibGUvV2ViU2VydmVyREIiLCAKICAgICAgICAiQXR0cmlidXRlRGVmaW5pdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJBdHRyaWJ1dGVOYW1lIjogImlkIiwgCiAgICAgICAgICAgICAgICAiQXR0cmlidXRlVHlwZSI6ICJTIgogICAgICAgICAgICB9CiAgICAgICAgXSwgCiAgICAgICAgIlByb3Zpc2lvbmVkVGhyb3VnaHB1dCI6IHsKICAgICAgICAgICAgIk51bWJlck9mRGVjcmVhc2VzVG9kYXkiOiAwLCAKICAgICAgICAgICAgIldyaXRlQ2FwYWNpdHlVbml0cyI6IDUsIAogICAgICAgICAgICAiUmVhZENhcGFjaXR5VW5pdHMiOiA1CiAgICAgICAgfSwgCiAgICAgICAgIlRhYmxlU2l6ZUJ5dGVzIjogMCwgCiAgICAgICAgIlRhYmxlTmFtZSI6ICJXZWJTZXJ2ZXJEQiIsIAogICAgICAgICJUYWJsZVN0YXR1cyI6ICJBQ1RJVkUiLCAKICAgICAgICAiVGFibGVJZCI6ICJhYjhhYzM4Mi0wZGM1LTRlMWYtYTU3YS1iNzU0MTI0ZDU0ZDEiLCAKICAgICAgICAiS2V5U2NoZW1hIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiS2V5VHlwZSI6ICJIQVNIIiwgCiAgICAgICAgICAgICAgICAiQXR0cmlidXRlTmFtZSI6ICJpZCIKICAgICAgICAgICAgfQogICAgICAgIF0sIAogICAgICAgICJJdGVtQ291bnQiOiAwLCAKICAgICAgICAiQ3JlYXRpb25EYXRlVGltZSI6IDE1Mzc4NzU0NzQuNjA5CiAgICB9Cn0K'));
awsim['dynamodb']['operations']['DescribeTable']['_options']['--table-name'] = () => {        var result = [];        for (var key in awsim['dynamodb']['operations']['DescribeTable']['_state'])                result.push(key.split(' ')[1]);        return result;};awsim['dynamodb']['operations']['DescribeTable']['_execute'] = (command) => {	var optionName = '--table-name'.replace('--','');        if (command.options[optionName] == undefined || command.options[optionName][0] == undefined || command.options[optionName].length > 1)                return 'aws: error: argument --table-name: expected one argument';	var optionValue = command['options'][optionName][0];        var resource = awsim['dynamodb']['operations']['DescribeTable']['_state']['--table-name ' + optionValue];        if (resource == undefined)                return 'An error occurred (ResourceNotFoundException) when calling the DescribeTable operation: Requested resource not found: ' + optionValue + ' not found';        return '<pre>' + JSON.stringify(resource, null, 1) + '</pre>';};
