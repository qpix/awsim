awsim['ec2']['operations']['DescribeTags']['_state'] = JSON.parse(atob('ewogICAgIlRhZ3MiOiBbCiAgICAgICAgewogICAgICAgICAgICAiUmVzb3VyY2VUeXBlIjogInZwYyIsIAogICAgICAgICAgICAiUmVzb3VyY2VJZCI6ICJ2cGMtY2U4OTM1YWEiLCAKICAgICAgICAgICAgIlZhbHVlIjogIkRFRkFVTFQtVlBDIiwgCiAgICAgICAgICAgICJLZXkiOiAiRE8tTk9ULURFTEVURSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJSZXNvdXJjZVR5cGUiOiAidnBjIiwgCiAgICAgICAgICAgICJSZXNvdXJjZUlkIjogInZwYy1jZTg5MzVhYSIsIAogICAgICAgICAgICAiVmFsdWUiOiAiREVGQVVMVC1WUEMiLCAKICAgICAgICAgICAgIktleSI6ICJOYW1lIgogICAgICAgIH0KICAgIF0KfQo='));
awsim['ec2']['operations']['DescribeTags']['_options'] = {};
awsim['ec2']['operations']['DescribeTags']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeTags']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVpcs']['_state'] = JSON.parse(atob('ewogICAgIlZwY3MiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWNlODkzNWFhIiwgCiAgICAgICAgICAgICJJbnN0YW5jZVRlbmFuY3kiOiAiZGVmYXVsdCIsIAogICAgICAgICAgICAiVGFncyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiREVGQVVMVC1WUEMiLCAKICAgICAgICAgICAgICAgICAgICAiS2V5IjogIk5hbWUiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiREVGQVVMVC1WUEMiLCAKICAgICAgICAgICAgICAgICAgICAiS2V5IjogIkRPLU5PVC1ERUxFVEUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiQ2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uSWQiOiAidnBjLWNpZHItYXNzb2MtNDdjODMyMmUiLCAKICAgICAgICAgICAgICAgICAgICAiQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgICAgICAgICAiQ2lkckJsb2NrU3RhdGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhc3NvY2lhdGVkIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIkRoY3BPcHRpb25zSWQiOiAiZG9wdC1lM2NlZmU4NiIsIAogICAgICAgICAgICAiQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgIklzRGVmYXVsdCI6IHRydWUKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeVpcs']['_options'] = {};
awsim['ec2']['operations']['DescribeVpcs']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVpcs']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeHosts']['_state'] = JSON.parse(atob('ewogICAgIkhvc3RzIjogW10KfQo='));
awsim['ec2']['operations']['DescribeHosts']['_options'] = {};
awsim['ec2']['operations']['DescribeHosts']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeHosts']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeFleets']['_state'] = JSON.parse(atob('ewogICAgIkZsZWV0cyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeFleets']['_options'] = {};
awsim['ec2']['operations']['DescribeFleets']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeFleets']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeRegions']['_state'] = JSON.parse(atob('ewogICAgIlJlZ2lvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmFwLXNvdXRoLTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5ldS13ZXN0LTMuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJldS13ZXN0LTMiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImV1LXdlc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAiZXUtd2VzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5hcC1ub3J0aGVhc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImFwLW5vcnRoZWFzdC0yIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5hcC1ub3J0aGVhc3QtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImFwLW5vcnRoZWFzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5zYS1lYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJzYS1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmNhLWNlbnRyYWwtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImNhLWNlbnRyYWwtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuYXAtc291dGhlYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aGVhc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuYXAtc291dGhlYXN0LTIuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aGVhc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAiZXUtY2VudHJhbC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogInVzLWVhc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAidXMtd2VzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi51cy13ZXN0LTIuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy13ZXN0LTIiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeRegions']['_options'] = {};
awsim['ec2']['operations']['DescribeRegions']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeRegions']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeSubnets']['_state'] = JSON.parse(atob('ewogICAgIlN1Ym5ldHMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJldS13ZXN0LTFiIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwOTEsIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtY2U4OTM1YWEiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWQ2N2VlN2IyIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjAuMC8yMCIsIAogICAgICAgICAgICAiQXNzaWduSXB2NkFkZHJlc3NPbkNyZWF0aW9uIjogZmFsc2UKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogImV1LXdlc3QtMWMiLCAKICAgICAgICAgICAgIkF2YWlsYWJsZUlwQWRkcmVzc0NvdW50IjogNDA4OSwgCiAgICAgICAgICAgICJEZWZhdWx0Rm9yQXoiOiB0cnVlLCAKICAgICAgICAgICAgIklwdjZDaWRyQmxvY2tBc3NvY2lhdGlvblNldCI6IFtdLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1jZTg5MzVhYSIsIAogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJNYXBQdWJsaWNJcE9uTGF1bmNoIjogdHJ1ZSwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtNjhlMTZhMWUiLCAKICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIxNzIuMzEuMTYuMC8yMCIsIAogICAgICAgICAgICAiQXNzaWduSXB2NkFkZHJlc3NPbkNyZWF0aW9uIjogZmFsc2UKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogImV1LXdlc3QtMWEiLCAKICAgICAgICAgICAgIkF2YWlsYWJsZUlwQWRkcmVzc0NvdW50IjogNDA5MSwgCiAgICAgICAgICAgICJEZWZhdWx0Rm9yQXoiOiB0cnVlLCAKICAgICAgICAgICAgIklwdjZDaWRyQmxvY2tBc3NvY2lhdGlvblNldCI6IFtdLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1jZTg5MzVhYSIsIAogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJNYXBQdWJsaWNJcE9uTGF1bmNoIjogdHJ1ZSwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtYjU4OTUyZWQiLCAKICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIxNzIuMzEuMzIuMC8yMCIsIAogICAgICAgICAgICAiQXNzaWduSXB2NkFkZHJlc3NPbkNyZWF0aW9uIjogZmFsc2UKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeSubnets']['_options'] = {};
awsim['ec2']['operations']['DescribeSubnets']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeSubnets']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVolumes']['_state'] = JSON.parse(atob('ewogICAgIlZvbHVtZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJldS13ZXN0LTFjIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTIzVDE5OjAzOjUxLjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTBiMDdjMDFkNjU2OGNmNGUzIiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wZDEzZDJlZWYxODMwYzFlYSIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3NkYTEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wZDEzZDJlZWYxODMwYzFlYSIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wOTQyZmFiNGJmM2RkNmU4NyIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTIzVDE5OjAzOjUxLjc1NloiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJldS13ZXN0LTFjIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTIzVDE5OjAzOjQyLjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTAwYTgyMzA4MmMzMTFmY2E0IiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wYjA5YmI0MjEyYmU1MTRmMyIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wYjA5YmI0MjEyYmU1MTRmMyIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wOWFhNDVjYzRiNGRiMjFlNyIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTIzVDE5OjAzOjQyLjM1NloiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeVolumes']['_options'] = {};
awsim['ec2']['operations']['DescribeVolumes']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVolumes']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeAddresses']['_state'] = JSON.parse(atob('ewogICAgIkFkZHJlc3NlcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeAddresses']['_options'] = {};
awsim['ec2']['operations']['DescribeAddresses']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeAddresses']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeFlowLogs']['_state'] = JSON.parse(atob('ewogICAgIkZsb3dMb2dzIjogW10KfQo='));
awsim['ec2']['operations']['DescribeFlowLogs']['_options'] = {};
awsim['ec2']['operations']['DescribeFlowLogs']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeFlowLogs']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInstances']['_state'] = JSON.parse(atob(''));
awsim['ec2']['operations']['DescribeInstances']['_options'] = {};
awsim['ec2']['operations']['DescribeInstances']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInstances']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeKeyPairs']['_state'] = JSON.parse(atob('ewogICAgIktleVBhaXJzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIktleU5hbWUiOiAicXdpa0xBQlMtTDE1Mi03MTM2NyIsIAogICAgICAgICAgICAiS2V5RmluZ2VycHJpbnQiOiAiMzc6MzQ6NjE6OGY6ZDc6Y2M6NjU6ZGQ6MzY6YTU6NDE6ZTU6NjM6NDU6MDM6MTgiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeKeyPairs']['_options'] = {};
awsim['ec2']['operations']['DescribeKeyPairs']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeKeyPairs']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeFpgaImages']['_state'] = JSON.parse(atob(''));
awsim['ec2']['operations']['DescribeFpgaImages']['_options'] = {};
awsim['ec2']['operations']['DescribeFpgaImages']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeFpgaImages']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeDhcpOptions']['_state'] = JSON.parse(atob('ewogICAgIkRoY3BPcHRpb25zIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkRoY3BDb25maWd1cmF0aW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiVmFsdWVzIjogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiZXUtd2VzdC0xLmNvbXB1dGUuaW50ZXJuYWwiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLCAKICAgICAgICAgICAgICAgICAgICAiS2V5IjogImRvbWFpbi1uYW1lIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlZhbHVlcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgIlZhbHVlIjogIkFtYXpvblByb3ZpZGVkRE5TIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICAgICAgICAgIktleSI6ICJkb21haW4tbmFtZS1zZXJ2ZXJzIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkRoY3BPcHRpb25zSWQiOiAiZG9wdC1lM2NlZmU4NiIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeDhcpOptions']['_options'] = {};
awsim['ec2']['operations']['DescribeDhcpOptions']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeDhcpOptions']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeElasticGpus']['_state'] = JSON.parse(atob('ewogICAgIk1heFJlc3VsdHMiOiAxMDAsIAogICAgIkVsYXN0aWNHcHVTZXQiOiBbXQp9Cg=='));
awsim['ec2']['operations']['DescribeElasticGpus']['_options'] = {};
awsim['ec2']['operations']['DescribeElasticGpus']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeElasticGpus']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNatGateways']['_state'] = JSON.parse(atob('ewogICAgIk5hdEdhdGV3YXlzIjogW10KfQo='));
awsim['ec2']['operations']['DescribeNatGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeNatGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNatGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNetworkAcls']['_state'] = JSON.parse(atob('ewogICAgIk5ldHdvcmtBY2xzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkFzc29jaWF0aW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTY4ZTE2YTFlIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtNGM1ODM1MjgiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMjQ0OGIzNWQiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWQ2N2VlN2IyIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtNGM1ODM1MjgiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMjU0OGIzNWMiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWI1ODk1MmVkIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtNGM1ODM1MjgiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtMjc0OGIzNWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiTmV0d29ya0FjbElkIjogImFjbC00YzU4MzUyOCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWNlODkzNWFhIiwgCiAgICAgICAgICAgICJUYWdzIjogW10sIAogICAgICAgICAgICAiRW50cmllcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUnVsZU51bWJlciI6IDEwMCwgCiAgICAgICAgICAgICAgICAgICAgIlByb3RvY29sIjogIi0xIiwgCiAgICAgICAgICAgICAgICAgICAgIkVncmVzcyI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMC4wLjAuMC8wIiwgCiAgICAgICAgICAgICAgICAgICAgIlJ1bGVBY3Rpb24iOiAiYWxsb3ciCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUnVsZU51bWJlciI6IDMyNzY3LCAKICAgICAgICAgICAgICAgICAgICAiUHJvdG9jb2wiOiAiLTEiLCAKICAgICAgICAgICAgICAgICAgICAiRWdyZXNzIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJkZW55IgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlJ1bGVOdW1iZXIiOiAxMDAsIAogICAgICAgICAgICAgICAgICAgICJQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJFZ3Jlc3MiOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJhbGxvdyIKICAgICAgICAgICAgICAgIH0sIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJSdWxlTnVtYmVyIjogMzI3NjcsIAogICAgICAgICAgICAgICAgICAgICJQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJFZ3Jlc3MiOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJkZW55IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIklzRGVmYXVsdCI6IHRydWUKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeNetworkAcls']['_options'] = {};
awsim['ec2']['operations']['DescribeNetworkAcls']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNetworkAcls']['_state'], null, 1); };
awsim['ec2']['operations']['DescribePrefixLists']['_state'] = JSON.parse(atob('ewogICAgIlByZWZpeExpc3RzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlByZWZpeExpc3ROYW1lIjogImNvbS5hbWF6b25hd3MuZXUtd2VzdC0xLmR5bmFtb2RiIiwgCiAgICAgICAgICAgICJDaWRycyI6IFsKICAgICAgICAgICAgICAgICI1Mi45NC41LjAvMjQiLCAKICAgICAgICAgICAgICAgICI1Mi4xMTkuMjQwLjAvMjEiLCAKICAgICAgICAgICAgICAgICI1Mi45NC4yNC4wLzIzIgogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlByZWZpeExpc3RJZCI6ICJwbC02ZmE1NDAwNiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJQcmVmaXhMaXN0TmFtZSI6ICJjb20uYW1hem9uYXdzLmV1LXdlc3QtMS5zMyIsIAogICAgICAgICAgICAiQ2lkcnMiOiBbCiAgICAgICAgICAgICAgICAiNTIuMjE4LjAuMC8xNyIsIAogICAgICAgICAgICAgICAgIjU0LjIzMS4xMjguMC8xOSIKICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJQcmVmaXhMaXN0SWQiOiAicGwtNmRhNTQwMDQiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribePrefixLists']['_options'] = {};
awsim['ec2']['operations']['DescribePrefixLists']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribePrefixLists']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeRouteTables']['_state'] = JSON.parse(atob('ewogICAgIlJvdXRlVGFibGVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkFzc29jaWF0aW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTY4ZTE2YTFlIiwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVBc3NvY2lhdGlvbklkIjogInJ0YmFzc29jLTk0NmJhZWYzIiwgCiAgICAgICAgICAgICAgICAgICAgIk1haW4iOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVJZCI6ICJydGItNmQyZjUyMDkiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUm91dGVUYWJsZUFzc29jaWF0aW9uSWQiOiAicnRiYXNzb2MtZGY1NDkxYjgiLCAKICAgICAgICAgICAgICAgICAgICAiTWFpbiI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTZkMmY1MjA5IgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC1kNjdlZTdiMiIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy05NTZiYWVmMiIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTZkMmY1MjA5IgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC1iNTg5NTJlZCIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy05MzZiYWVmNCIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTZkMmY1MjA5IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlJvdXRlVGFibGVJZCI6ICJydGItNmQyZjUyMDkiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1jZTg5MzVhYSIsIAogICAgICAgICAgICAiUHJvcGFnYXRpbmdWZ3dzIjogW10sIAogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIlJvdXRlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiR2F0ZXdheUlkIjogImxvY2FsIiwgCiAgICAgICAgICAgICAgICAgICAgIkRlc3RpbmF0aW9uQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgICAgICAgICAiU3RhdGUiOiAiYWN0aXZlIiwgCiAgICAgICAgICAgICAgICAgICAgIk9yaWdpbiI6ICJDcmVhdGVSb3V0ZVRhYmxlIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdhdGV3YXlJZCI6ICJpZ3ctM2UwNzA1NWIiLCAKICAgICAgICAgICAgICAgICAgICAiRGVzdGluYXRpb25DaWRyQmxvY2siOiAiMC4wLjAuMC8wIiwgCiAgICAgICAgICAgICAgICAgICAgIlN0YXRlIjogImFjdGl2ZSIsIAogICAgICAgICAgICAgICAgICAgICJPcmlnaW4iOiAiQ3JlYXRlUm91dGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeRouteTables']['_options'] = {};
awsim['ec2']['operations']['DescribeRouteTables']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeRouteTables']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVpnGateways']['_state'] = JSON.parse(atob('ewogICAgIlZwbkdhdGV3YXlzIjogW10KfQo='));
awsim['ec2']['operations']['DescribeVpnGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeVpnGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVpnGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVolumeStatus']['_state'] = JSON.parse(atob('ewogICAgIlZvbHVtZVN0YXR1c2VzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlZvbHVtZVN0YXR1cyI6IHsKICAgICAgICAgICAgICAgICJTdGF0dXMiOiAib2siLCAKICAgICAgICAgICAgICAgICJEZXRhaWxzIjogWwogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJwYXNzZWQiLCAKICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiAiaW8tZW5hYmxlZCIKICAgICAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJTdGF0dXMiOiAibm90LWFwcGxpY2FibGUiLCAKICAgICAgICAgICAgICAgICAgICAgICAgIk5hbWUiOiAiaW8tcGVyZm9ybWFuY2UiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAiZXUtd2VzdC0xYyIsIAogICAgICAgICAgICAiRXZlbnRzIjogW10sIAogICAgICAgICAgICAiQWN0aW9ucyI6IFtdLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wZDEzZDJlZWYxODMwYzFlYSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJWb2x1bWVTdGF0dXMiOiB7CiAgICAgICAgICAgICAgICAiU3RhdHVzIjogIm9rIiwgCiAgICAgICAgICAgICAgICAiRGV0YWlscyI6IFsKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICJTdGF0dXMiOiAicGFzc2VkIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJOYW1lIjogImlvLWVuYWJsZWQiCiAgICAgICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiU3RhdHVzIjogIm5vdC1hcHBsaWNhYmxlIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJOYW1lIjogImlvLXBlcmZvcm1hbmNlIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogImV1LXdlc3QtMWMiLCAKICAgICAgICAgICAgIkV2ZW50cyI6IFtdLCAKICAgICAgICAgICAgIkFjdGlvbnMiOiBbXSwgCiAgICAgICAgICAgICJWb2x1bWVJZCI6ICJ2b2wtMGIwOWJiNDIxMmJlNTE0ZjMiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeVolumeStatus']['_options'] = {};
awsim['ec2']['operations']['DescribeVolumeStatus']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVolumeStatus']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVpcEndpoints']['_state'] = JSON.parse(atob('ewogICAgIlZwY0VuZHBvaW50cyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeVpcEndpoints']['_options'] = {};
awsim['ec2']['operations']['DescribeVpcEndpoints']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVpcEndpoints']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInstanceStatus']['_state'] = JSON.parse(atob('ewogICAgIkluc3RhbmNlU3RhdHVzZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTBiMDdjMDFkNjU2OGNmNGUzIiwgCiAgICAgICAgICAgICJJbnN0YW5jZVN0YXRlIjogewogICAgICAgICAgICAgICAgIkNvZGUiOiAxNiwgCiAgICAgICAgICAgICAgICAiTmFtZSI6ICJydW5uaW5nIgogICAgICAgICAgICB9LCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAiZXUtd2VzdC0xYyIsIAogICAgICAgICAgICAiU3lzdGVtU3RhdHVzIjogewogICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJvayIsIAogICAgICAgICAgICAgICAgIkRldGFpbHMiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiU3RhdHVzIjogInBhc3NlZCIsIAogICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6ICJyZWFjaGFiaWxpdHkiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LCAKICAgICAgICAgICAgIkluc3RhbmNlU3RhdHVzIjogewogICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJvayIsIAogICAgICAgICAgICAgICAgIkRldGFpbHMiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiU3RhdHVzIjogInBhc3NlZCIsIAogICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6ICJyZWFjaGFiaWxpdHkiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTAwYTgyMzA4MmMzMTFmY2E0IiwgCiAgICAgICAgICAgICJJbnN0YW5jZVN0YXRlIjogewogICAgICAgICAgICAgICAgIkNvZGUiOiAxNiwgCiAgICAgICAgICAgICAgICAiTmFtZSI6ICJydW5uaW5nIgogICAgICAgICAgICB9LCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAiZXUtd2VzdC0xYyIsIAogICAgICAgICAgICAiU3lzdGVtU3RhdHVzIjogewogICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJvayIsIAogICAgICAgICAgICAgICAgIkRldGFpbHMiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiU3RhdHVzIjogInBhc3NlZCIsIAogICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6ICJyZWFjaGFiaWxpdHkiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LCAKICAgICAgICAgICAgIkluc3RhbmNlU3RhdHVzIjogewogICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJvayIsIAogICAgICAgICAgICAgICAgIkRldGFpbHMiOiBbCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAiU3RhdHVzIjogInBhc3NlZCIsIAogICAgICAgICAgICAgICAgICAgICAgICAiTmFtZSI6ICJyZWFjaGFiaWxpdHkiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeInstanceStatus']['_options'] = {};
awsim['ec2']['operations']['DescribeInstanceStatus']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInstanceStatus']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeSecurityGroups']['_state'] = JSON.parse(atob('ewogICAgIlNlY3VyaXR5R3JvdXBzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIklwUGVybWlzc2lvbnNFZ3Jlc3MiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIklwUHJvdG9jb2wiOiAiLTEiLCAKICAgICAgICAgICAgICAgICAgICAiUHJlZml4TGlzdElkcyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXBSYW5nZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJDaWRySXAiOiAiMC4wLjAuMC8wIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICAgICAgICAgIlVzZXJJZEdyb3VwUGFpcnMiOiBbXSwgCiAgICAgICAgICAgICAgICAgICAgIklwdjZSYW5nZXMiOiBbXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkRlc2NyaXB0aW9uIjogImxhdW5jaC13aXphcmQtMiBjcmVhdGVkIDIwMTgtMDktMjNUMjE6MDM6NDcuMTg4KzAyOjAwIiwgCiAgICAgICAgICAgICJJcFBlcm1pc3Npb25zIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcmVmaXhMaXN0SWRzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJGcm9tUG9ydCI6IDIyLCAKICAgICAgICAgICAgICAgICAgICAiSXBSYW5nZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJDaWRySXAiOiAiMC4wLjAuMC8wIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICAgICAgICAgIlRvUG9ydCI6IDIyLCAKICAgICAgICAgICAgICAgICAgICAiSXBQcm90b2NvbCI6ICJ0Y3AiLCAKICAgICAgICAgICAgICAgICAgICAiVXNlcklkR3JvdXBQYWlycyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXB2NlJhbmdlcyI6IFtdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiR3JvdXBOYW1lIjogImxhdW5jaC13aXphcmQtMiIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWNlODkzNWFhIiwgCiAgICAgICAgICAgICJPd25lcklkIjogIjUzMTUzMzE1Mjg1NyIsIAogICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy0wMjRiMGQwMzI5MzVmNmQzYSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJJcFBlcm1pc3Npb25zRWdyZXNzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJJcFByb3RvY29sIjogIi0xIiwgCiAgICAgICAgICAgICAgICAgICAgIlByZWZpeExpc3RJZHMiOiBbXSwgCiAgICAgICAgICAgICAgICAgICAgIklwUmFuZ2VzIjogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQ2lkcklwIjogIjAuMC4wLjAvMCIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sIAogICAgICAgICAgICAgICAgICAgICJVc2VySWRHcm91cFBhaXJzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJJcHY2UmFuZ2VzIjogW10KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJEZXNjcmlwdGlvbiI6ICJsYXVuY2gtd2l6YXJkLTEgY3JlYXRlZCAyMDE4LTA5LTIzVDIxOjAzOjM3LjgzMiswMjowMCIsIAogICAgICAgICAgICAiSXBQZXJtaXNzaW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUHJlZml4TGlzdElkcyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiRnJvbVBvcnQiOiAyMiwgCiAgICAgICAgICAgICAgICAgICAgIklwUmFuZ2VzIjogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQ2lkcklwIjogIjAuMC4wLjAvMCIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sIAogICAgICAgICAgICAgICAgICAgICJUb1BvcnQiOiAyMiwgCiAgICAgICAgICAgICAgICAgICAgIklwUHJvdG9jb2wiOiAidGNwIiwgCiAgICAgICAgICAgICAgICAgICAgIlVzZXJJZEdyb3VwUGFpcnMiOiBbXSwgCiAgICAgICAgICAgICAgICAgICAgIklwdjZSYW5nZXMiOiBbXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkdyb3VwTmFtZSI6ICJsYXVuY2gtd2l6YXJkLTEiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1jZTg5MzVhYSIsIAogICAgICAgICAgICAiT3duZXJJZCI6ICI1MzE1MzMxNTI4NTciLCAKICAgICAgICAgICAgIkdyb3VwSWQiOiAic2ctMGY3OWY2ZWM1OGI2OTZjYWMiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiSXBQZXJtaXNzaW9uc0VncmVzcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiSXBQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJQcmVmaXhMaXN0SWRzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJJcFJhbmdlcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNpZHJJcCI6ICIwLjAuMC4wLzAiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLCAKICAgICAgICAgICAgICAgICAgICAiVXNlcklkR3JvdXBQYWlycyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXB2NlJhbmdlcyI6IFtdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiZGVmYXVsdCBWUEMgc2VjdXJpdHkgZ3JvdXAiLCAKICAgICAgICAgICAgIklwUGVybWlzc2lvbnMiOiBbXSwgCiAgICAgICAgICAgICJHcm91cE5hbWUiOiAiZGVmYXVsdCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWNlODkzNWFhIiwgCiAgICAgICAgICAgICJPd25lcklkIjogIjUzMTUzMzE1Mjg1NyIsIAogICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy02NjQyNjMwMSIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeSecurityGroups']['_options'] = {};
awsim['ec2']['operations']['DescribeSecurityGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeSecurityGroups']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVpnConnections']['_state'] = JSON.parse(atob('ewogICAgIlZwbkNvbm5lY3Rpb25zIjogW10KfQo='));
awsim['ec2']['operations']['DescribeVpnConnections']['_options'] = {};
awsim['ec2']['operations']['DescribeVpnConnections']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVpnConnections']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeLaunchTemplates']['_state'] = JSON.parse(atob('ewogICAgIkxhdW5jaFRlbXBsYXRlcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeLaunchTemplates']['_options'] = {};
awsim['ec2']['operations']['DescribeLaunchTemplates']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeLaunchTemplates']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeMovingAddresses']['_state'] = JSON.parse(atob('ewogICAgIk1vdmluZ0FkZHJlc3NTdGF0dXNlcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeMovingAddresses']['_options'] = {};
awsim['ec2']['operations']['DescribeMovingAddresses']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeMovingAddresses']['_state'], null, 1); };
awsim['ec2']['operations']['DescribePlacementGroups']['_state'] = JSON.parse(atob('ewogICAgIlBsYWNlbWVudEdyb3VwcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribePlacementGroups']['_options'] = {};
awsim['ec2']['operations']['DescribePlacementGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribePlacementGroups']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeCustomerGateways']['_state'] = JSON.parse(atob('ewogICAgIkN1c3RvbWVyR2F0ZXdheXMiOiBbXQp9Cg=='));
awsim['ec2']['operations']['DescribeCustomerGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeCustomerGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeCustomerGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInternetGateways']['_state'] = JSON.parse(atob('ewogICAgIkludGVybmV0R2F0ZXdheXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnRzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgICAgICAgICAiVnBjSWQiOiAidnBjLWNlODkzNWFhIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkludGVybmV0R2F0ZXdheUlkIjogImlndy0zZTA3MDU1YiIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeInternetGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeInternetGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInternetGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeAvailabilityZones']['_state'] = JSON.parse(atob('ewogICAgIkF2YWlsYWJpbGl0eVpvbmVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiWm9uZU5hbWUiOiAiZXUtd2VzdC0xYSIsIAogICAgICAgICAgICAiTWVzc2FnZXMiOiBbXSwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImV1LXdlc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIlpvbmVOYW1lIjogImV1LXdlc3QtMWIiLCAKICAgICAgICAgICAgIk1lc3NhZ2VzIjogW10sIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJldS13ZXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJab25lTmFtZSI6ICJldS13ZXN0LTFjIiwgCiAgICAgICAgICAgICJNZXNzYWdlcyI6IFtdLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAiZXUtd2VzdC0xIgogICAgICAgIH0KICAgIF0KfQo='));
awsim['ec2']['operations']['DescribeAvailabilityZones']['_options'] = {};
awsim['ec2']['operations']['DescribeAvailabilityZones']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeAvailabilityZones']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_state'] = JSON.parse(atob('ewogICAgIk5ldHdvcmtJbnRlcmZhY2VzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlN0YXR1cyI6ICJpbi11c2UiLCAKICAgICAgICAgICAgIk1hY0FkZHJlc3MiOiAiMDY6YTE6NGE6ZGU6OTg6YWUiLCAKICAgICAgICAgICAgIlNvdXJjZURlc3RDaGVjayI6IHRydWUsIAogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJldS13ZXN0LTFjIiwgCiAgICAgICAgICAgICJEZXNjcmlwdGlvbiI6ICIiLCAKICAgICAgICAgICAgIk5ldHdvcmtJbnRlcmZhY2VJZCI6ICJlbmktMGQ3ZmM5ZmYwNjEyM2JiNmQiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3NlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTI1LTEzMS5ldS13ZXN0LTEuY29tcHV0ZS5pbnRlcm5hbCIsIAogICAgICAgICAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzIjogIjE3Mi4zMS4yNS4xMzEiLCAKICAgICAgICAgICAgICAgICAgICAiUHJpbWFyeSI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJBc3NvY2lhdGlvbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIlB1YmxpY0lwIjogIjUyLjIwOC4xMjMuMTE1IiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJQdWJsaWNEbnNOYW1lIjogImVjMi01Mi0yMDgtMTIzLTExNS5ldS13ZXN0LTEuY29tcHV0ZS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJSZXF1ZXN0ZXJNYW5hZ2VkIjogZmFsc2UsIAogICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTI1LTEzMS5ldS13ZXN0LTEuY29tcHV0ZS5pbnRlcm5hbCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWNlODkzNWFhIiwgCiAgICAgICAgICAgICJJbnRlcmZhY2VUeXBlIjogImludGVyZmFjZSIsIAogICAgICAgICAgICAiQXR0YWNobWVudCI6IHsKICAgICAgICAgICAgICAgICJTdGF0dXMiOiAiYXR0YWNoZWQiLCAKICAgICAgICAgICAgICAgICJEZXZpY2VJbmRleCI6IDAsIAogICAgICAgICAgICAgICAgIkF0dGFjaFRpbWUiOiAiMjAxOC0wOS0yM1QxOTowMzo0MS4wMDBaIiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTAwYTgyMzA4MmMzMTFmY2E0IiwgCiAgICAgICAgICAgICAgICAiRGVsZXRlT25UZXJtaW5hdGlvbiI6IHRydWUsIAogICAgICAgICAgICAgICAgIkF0dGFjaG1lbnRJZCI6ICJlbmktYXR0YWNoLTA3ZGYwMjQzNmYwNmM3ZTM4IiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VPd25lcklkIjogIjUzMTUzMzE1Mjg1NyIKICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICJHcm91cHMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdyb3VwTmFtZSI6ICJsYXVuY2gtd2l6YXJkLTEiLCAKICAgICAgICAgICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy0wZjc5ZjZlYzU4YjY5NmNhYyIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJJcHY2QWRkcmVzc2VzIjogW10sIAogICAgICAgICAgICAiT3duZXJJZCI6ICI1MzE1MzMxNTI4NTciLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjI1LjEzMSIsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTY4ZTE2YTFlIiwgCiAgICAgICAgICAgICJUYWdTZXQiOiBbXSwgCiAgICAgICAgICAgICJBc3NvY2lhdGlvbiI6IHsKICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICI1Mi4yMDguMTIzLjExNSIsIAogICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTUyLTIwOC0xMjMtMTE1LmV1LXdlc3QtMS5jb21wdXRlLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uIgogICAgICAgICAgICB9CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiU3RhdHVzIjogImluLXVzZSIsIAogICAgICAgICAgICAiTWFjQWRkcmVzcyI6ICIwNjo4YTplMDozNzo0ZDpiYyIsIAogICAgICAgICAgICAiU291cmNlRGVzdENoZWNrIjogdHJ1ZSwgCiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogImV1LXdlc3QtMWMiLCAKICAgICAgICAgICAgIkRlc2NyaXB0aW9uIjogIiIsIAogICAgICAgICAgICAiTmV0d29ya0ludGVyZmFjZUlkIjogImVuaS0wZGUxOGJmNTRhNTcxY2ZhZiIsIAogICAgICAgICAgICAiUHJpdmF0ZUlwQWRkcmVzc2VzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcml2YXRlRG5zTmFtZSI6ICJpcC0xNzItMzEtMjEtMjEyLmV1LXdlc3QtMS5jb21wdXRlLmludGVybmFsIiwgCiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjIxLjIxMiIsIAogICAgICAgICAgICAgICAgICAgICJQcmltYXJ5IjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljSXAiOiAiNTQuMTk0LjE1OC4xNjAiLCAKICAgICAgICAgICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTU0LTE5NC0xNTgtMTYwLmV1LXdlc3QtMS5jb21wdXRlLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIklwT3duZXJJZCI6ICJhbWF6b24iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlJlcXVlc3Rlck1hbmFnZWQiOiBmYWxzZSwgCiAgICAgICAgICAgICJQcml2YXRlRG5zTmFtZSI6ICJpcC0xNzItMzEtMjEtMjEyLmV1LXdlc3QtMS5jb21wdXRlLmludGVybmFsIiwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtY2U4OTM1YWEiLCAKICAgICAgICAgICAgIkludGVyZmFjZVR5cGUiOiAiaW50ZXJmYWNlIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50IjogewogICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgIkRldmljZUluZGV4IjogMCwgCiAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTIzVDE5OjAzOjUxLjAwMFoiLCAKICAgICAgICAgICAgICAgICJJbnN0YW5jZUlkIjogImktMGIwN2MwMWQ2NTY4Y2Y0ZTMiLCAKICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAiQXR0YWNobWVudElkIjogImVuaS1hdHRhY2gtMDFkNDc1OTUxNmQyMDNlYWEiLCAKICAgICAgICAgICAgICAgICJJbnN0YW5jZU93bmVySWQiOiAiNTMxNTMzMTUyODU3IgogICAgICAgICAgICB9LCAKICAgICAgICAgICAgIkdyb3VwcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiR3JvdXBOYW1lIjogImxhdW5jaC13aXphcmQtMiIsIAogICAgICAgICAgICAgICAgICAgICJHcm91cElkIjogInNnLTAyNGIwZDAzMjkzNWY2ZDNhIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIklwdjZBZGRyZXNzZXMiOiBbXSwgCiAgICAgICAgICAgICJPd25lcklkIjogIjUzMTUzMzE1Mjg1NyIsIAogICAgICAgICAgICAiUHJpdmF0ZUlwQWRkcmVzcyI6ICIxNzIuMzEuMjEuMjEyIiwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtNjhlMTZhMWUiLCAKICAgICAgICAgICAgIlRhZ1NldCI6IFtdLCAKICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgIlB1YmxpY0lwIjogIjU0LjE5NC4xNTguMTYwIiwgCiAgICAgICAgICAgICAgICAiUHVibGljRG5zTmFtZSI6ICJlYzItNTQtMTk0LTE1OC0xNjAuZXUtd2VzdC0xLmNvbXB1dGUuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAgICAgIklwT3duZXJJZCI6ICJhbWF6b24iCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_options'] = {};
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNetworkInterfaces']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVpcPeeringConnections']['_state'] = JSON.parse(atob('ewogICAgIlZwY1BlZXJpbmdDb25uZWN0aW9ucyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeVpcPeeringConnections']['_options'] = {};
awsim['ec2']['operations']['DescribeVpcPeeringConnections']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVpcPeeringConnections']['_state'], null, 1); };
