awsim['ec2']['operations']['DescribeVpcs']['_state'] = JSON.parse(atob('ewogICAgIlZwY3MiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJJbnN0YW5jZVRlbmFuY3kiOiAiZGVmYXVsdCIsIAogICAgICAgICAgICAiVGFncyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiREVGQVVMVC1WUEMiLCAKICAgICAgICAgICAgICAgICAgICAiS2V5IjogIkRPLU5PVC1ERUxFVEUiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiVmFsdWUiOiAiREVGQVVMVC1WUEMiLCAKICAgICAgICAgICAgICAgICAgICAiS2V5IjogIk5hbWUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiQ2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uSWQiOiAidnBjLWNpZHItYXNzb2MtOGM0YjNiZTUiLCAKICAgICAgICAgICAgICAgICAgICAiQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgICAgICAgICAiQ2lkckJsb2NrU3RhdGUiOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhc3NvY2lhdGVkIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIkRoY3BPcHRpb25zSWQiOiAiZG9wdC01MGY1ODIzNCIsIAogICAgICAgICAgICAiQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgIklzRGVmYXVsdCI6IHRydWUKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeVpcs']['_options'] = {};
awsim['ec2']['operations']['DescribeVpcs']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVpcs']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeRegions']['_state'] = JSON.parse(atob('ewogICAgIlJlZ2lvbnMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmFwLXNvdXRoLTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5ldS13ZXN0LTMuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJldS13ZXN0LTMiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmV1LXdlc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImV1LXdlc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuZXUtd2VzdC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAiZXUtd2VzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5hcC1ub3J0aGVhc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImFwLW5vcnRoZWFzdC0yIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5hcC1ub3J0aGVhc3QtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImFwLW5vcnRoZWFzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi5zYS1lYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJzYS1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLmNhLWNlbnRyYWwtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogImNhLWNlbnRyYWwtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuYXAtc291dGhlYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aGVhc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuYXAtc291dGhlYXN0LTIuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJhcC1zb3V0aGVhc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIuZXUtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAiZXUtY2VudHJhbC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiRW5kcG9pbnQiOiAiZWMyLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogInVzLWVhc3QtMiIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJFbmRwb2ludCI6ICJlYzIudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAidXMtd2VzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIkVuZHBvaW50IjogImVjMi51cy13ZXN0LTIuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy13ZXN0LTIiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeRegions']['_options'] = {};
awsim['ec2']['operations']['DescribeRegions']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeRegions']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeSubnets']['_state'] = JSON.parse(atob('ewogICAgIlN1Ym5ldHMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFhIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwOTEsIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtZGEwYTQzYmQiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTYxMDcxZDM5IiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjE2LjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFlIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwODksIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtZGEwYTQzYmQiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWYxNzM5N2NkIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjMyLjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFjIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwODksIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtZGEwYTQzYmQiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTM4MTdmMjE1IiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjQ4LjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwODksIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtZGEwYTQzYmQiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTk5NjMxYWZjIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjY0LjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFmIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwODksIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtZGEwYTQzYmQiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWUxMWM3M2VkIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjgwLjAvMjAiLCAKICAgICAgICAgICAgIkFzc2lnbklwdjZBZGRyZXNzT25DcmVhdGlvbiI6IGZhbHNlCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFkIiwgCiAgICAgICAgICAgICJBdmFpbGFibGVJcEFkZHJlc3NDb3VudCI6IDQwOTAsIAogICAgICAgICAgICAiRGVmYXVsdEZvckF6IjogdHJ1ZSwgCiAgICAgICAgICAgICJJcHY2Q2lkckJsb2NrQXNzb2NpYXRpb25TZXQiOiBbXSwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtZGEwYTQzYmQiLCAKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiTWFwUHVibGljSXBPbkxhdW5jaCI6IHRydWUsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTQ4ODg1YzAxIiwgCiAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMTcyLjMxLjAuMC8yMCIsIAogICAgICAgICAgICAiQXNzaWduSXB2NkFkZHJlc3NPbkNyZWF0aW9uIjogZmFsc2UKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeSubnets']['_options'] = {};
awsim['ec2']['operations']['DescribeSubnets']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeSubnets']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeVolumes']['_state'] = JSON.parse(atob('ewogICAgIlZvbHVtZXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFmIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjI5LjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTBlZmJhZTY4NjZkOTIyMGIwIiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wY2Q1YTE2NWRmMjRjOGIxYiIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wY2Q1YTE2NWRmMjRjOGIxYiIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjI5LjU1MVoiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFlIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjI5LjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTAzYTY1NDk3ZjE5MWY2NjdlIiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wNjE0ZWRiZmY1NmEwMmU4NiIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wNjE0ZWRiZmY1NmEwMmU4NiIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjI5LjMyMloiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFjIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjMwLjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTAzMzU5YmJmYTg0YmEwZWI3IiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wMjg4MGZjZjE1M2Q4MWUwOSIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wMjg4MGZjZjE1M2Q4MWUwOSIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjI5Ljk5OVoiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50cyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjI5LjAwMFoiLCAKICAgICAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTA5YzExZDQxYWY1YzNmYzUyIiwgCiAgICAgICAgICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wNTEzYWJmYjBlYjU5ZWEwMCIsIAogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkRldmljZSI6ICIvZGV2L3h2ZGEiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRW5jcnlwdGVkIjogZmFsc2UsIAogICAgICAgICAgICAiVm9sdW1lVHlwZSI6ICJncDIiLCAKICAgICAgICAgICAgIlZvbHVtZUlkIjogInZvbC0wNTEzYWJmYjBlYjU5ZWEwMCIsIAogICAgICAgICAgICAiU3RhdGUiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJJb3BzIjogMTAwLCAKICAgICAgICAgICAgIlNuYXBzaG90SWQiOiAic25hcC0wZTg0OGI2OTJjM2M3ZGU5ZSIsIAogICAgICAgICAgICAiQ3JlYXRlVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjI5LjMyMFoiLCAKICAgICAgICAgICAgIlNpemUiOiA4CiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeVolumes']['_options'] = {};
awsim['ec2']['operations']['DescribeVolumes']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeVolumes']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeAddresses']['_state'] = JSON.parse(atob('ewogICAgIkFkZHJlc3NlcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeAddresses']['_options'] = {};
awsim['ec2']['operations']['DescribeAddresses']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeAddresses']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInstances']['_state'] = JSON.parse(atob(''));
awsim['ec2']['operations']['DescribeInstances']['_options'] = {};
awsim['ec2']['operations']['DescribeInstances']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInstances']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeKeyPairs']['_state'] = JSON.parse(atob('ewogICAgIktleVBhaXJzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIktleU5hbWUiOiAicXdpa0xBQlMtTDE1Mi03MTY3MyIsIAogICAgICAgICAgICAiS2V5RmluZ2VycHJpbnQiOiAiNGU6YmQ6ODg6NDM6Yzk6MTc6N2E6MWQ6NDI6ODM6NTg6ODU6NDY6Yzk6YTA6ZDUiCiAgICAgICAgfQogICAgXQp9Cg=='));
awsim['ec2']['operations']['DescribeKeyPairs']['_options'] = {};
awsim['ec2']['operations']['DescribeKeyPairs']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeKeyPairs']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNatGateways']['_state'] = JSON.parse(atob('ewogICAgIk5hdEdhdGV3YXlzIjogW10KfQo='));
awsim['ec2']['operations']['DescribeNatGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeNatGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNatGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNetworkAcls']['_state'] = JSON.parse(atob('ewogICAgIk5ldHdvcmtBY2xzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkFzc29jaWF0aW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTQ4ODg1YzAxIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMzI3YjQxNTUiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtM2Q4MmY2NDAiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTk5NjMxYWZjIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMzI3YjQxNTUiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtNjIwMWE5MTMiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWYxNzM5N2NkIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMzI3YjQxNTUiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtM2Y4MmY2NDIiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTYxMDcxZDM5IiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMzI3YjQxNTUiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtM2M4MmY2NDEiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTM4MTdmMjE1IiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMzI3YjQxNTUiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtM2U4MmY2NDMiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWUxMWM3M2VkIiwgCiAgICAgICAgICAgICAgICAgICAgIk5ldHdvcmtBY2xJZCI6ICJhY2wtMzI3YjQxNTUiLCAKICAgICAgICAgICAgICAgICAgICAiTmV0d29ya0FjbEFzc29jaWF0aW9uSWQiOiAiYWNsYXNzb2MtNjkyOGYwMWIiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiTmV0d29ya0FjbElkIjogImFjbC0zMjdiNDE1NSIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJUYWdzIjogW10sIAogICAgICAgICAgICAiRW50cmllcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUnVsZU51bWJlciI6IDEwMCwgCiAgICAgICAgICAgICAgICAgICAgIlByb3RvY29sIjogIi0xIiwgCiAgICAgICAgICAgICAgICAgICAgIkVncmVzcyI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJDaWRyQmxvY2siOiAiMC4wLjAuMC8wIiwgCiAgICAgICAgICAgICAgICAgICAgIlJ1bGVBY3Rpb24iOiAiYWxsb3ciCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUnVsZU51bWJlciI6IDMyNzY3LCAKICAgICAgICAgICAgICAgICAgICAiUHJvdG9jb2wiOiAiLTEiLCAKICAgICAgICAgICAgICAgICAgICAiRWdyZXNzIjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJkZW55IgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlJ1bGVOdW1iZXIiOiAxMDAsIAogICAgICAgICAgICAgICAgICAgICJQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJFZ3Jlc3MiOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJhbGxvdyIKICAgICAgICAgICAgICAgIH0sIAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJSdWxlTnVtYmVyIjogMzI3NjcsIAogICAgICAgICAgICAgICAgICAgICJQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJFZ3Jlc3MiOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIkNpZHJCbG9jayI6ICIwLjAuMC4wLzAiLCAKICAgICAgICAgICAgICAgICAgICAiUnVsZUFjdGlvbiI6ICJkZW55IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIklzRGVmYXVsdCI6IHRydWUKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeNetworkAcls']['_options'] = {};
awsim['ec2']['operations']['DescribeNetworkAcls']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNetworkAcls']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeRouteTables']['_state'] = JSON.parse(atob('ewogICAgIlJvdXRlVGFibGVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIkFzc29jaWF0aW9ucyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTQ4ODg1YzAxIiwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVBc3NvY2lhdGlvbklkIjogInJ0YmFzc29jLWYxZjIzODg4IiwgCiAgICAgICAgICAgICAgICAgICAgIk1haW4iOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVJZCI6ICJydGItNGQ0ZmVlMmIiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTYxMDcxZDM5IiwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVBc3NvY2lhdGlvbklkIjogInJ0YmFzc29jLWZmZjIzODg2IiwgCiAgICAgICAgICAgICAgICAgICAgIk1haW4iOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAgICAgIlJvdXRlVGFibGVJZCI6ICJydGItNGQ0ZmVlMmIiCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUm91dGVUYWJsZUFzc29jaWF0aW9uSWQiOiAicnRiYXNzb2MtOTNmZjM1ZWEiLCAKICAgICAgICAgICAgICAgICAgICAiTWFpbiI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTRkNGZlZTJiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC05OTYzMWFmYyIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy1iMjc3NzhjYSIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTRkNGZlZTJiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC1lMTFjNzNlZCIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy0wYWVhMDA3MCIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTRkNGZlZTJiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC1mMTczOTdjZCIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy1mY2YyMzg4NSIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTRkNGZlZTJiIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC0zODE3ZjIxNSIsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlQXNzb2NpYXRpb25JZCI6ICJydGJhc3NvYy1mZWYyMzg4NyIsIAogICAgICAgICAgICAgICAgICAgICJNYWluIjogZmFsc2UsIAogICAgICAgICAgICAgICAgICAgICJSb3V0ZVRhYmxlSWQiOiAicnRiLTRkNGZlZTJiIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlJvdXRlVGFibGVJZCI6ICJydGItNGQ0ZmVlMmIiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1kYTBhNDNiZCIsIAogICAgICAgICAgICAiUHJvcGFnYXRpbmdWZ3dzIjogW10sIAogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIlJvdXRlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiR2F0ZXdheUlkIjogImxvY2FsIiwgCiAgICAgICAgICAgICAgICAgICAgIkRlc3RpbmF0aW9uQ2lkckJsb2NrIjogIjE3Mi4zMS4wLjAvMTYiLCAKICAgICAgICAgICAgICAgICAgICAiU3RhdGUiOiAiYWN0aXZlIiwgCiAgICAgICAgICAgICAgICAgICAgIk9yaWdpbiI6ICJDcmVhdGVSb3V0ZVRhYmxlIgogICAgICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdhdGV3YXlJZCI6ICJpZ3ctMzlkMmNiNWQiLCAKICAgICAgICAgICAgICAgICAgICAiRGVzdGluYXRpb25DaWRyQmxvY2siOiAiMC4wLjAuMC8wIiwgCiAgICAgICAgICAgICAgICAgICAgIlN0YXRlIjogImFjdGl2ZSIsIAogICAgICAgICAgICAgICAgICAgICJPcmlnaW4iOiAiQ3JlYXRlUm91dGUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0KICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeRouteTables']['_options'] = {};
awsim['ec2']['operations']['DescribeRouteTables']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeRouteTables']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeSecurityGroups']['_state'] = JSON.parse(atob('ewogICAgIlNlY3VyaXR5R3JvdXBzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIklwUGVybWlzc2lvbnNFZ3Jlc3MiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIklwUHJvdG9jb2wiOiAiLTEiLCAKICAgICAgICAgICAgICAgICAgICAiUHJlZml4TGlzdElkcyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXBSYW5nZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJDaWRySXAiOiAiMC4wLjAuMC8wIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICAgICAgICAgIlVzZXJJZEdyb3VwUGFpcnMiOiBbXSwgCiAgICAgICAgICAgICAgICAgICAgIklwdjZSYW5nZXMiOiBbXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkRlc2NyaXB0aW9uIjogIlNlY3VyaXR5IEdyb3VwIGNyZWF0ZWQgZXhwbGljaXRseSBmb3Igd2ViIHNlcnZlcnMuIiwgCiAgICAgICAgICAgICJJcFBlcm1pc3Npb25zIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcmVmaXhMaXN0SWRzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJGcm9tUG9ydCI6IDgwLCAKICAgICAgICAgICAgICAgICAgICAiSXBSYW5nZXMiOiBbCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJDaWRySXAiOiAiMC4wLjAuMC8wIgogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICAgICAgICAgIlRvUG9ydCI6IDgwLCAKICAgICAgICAgICAgICAgICAgICAiSXBQcm90b2NvbCI6ICJ0Y3AiLCAKICAgICAgICAgICAgICAgICAgICAiVXNlcklkR3JvdXBQYWlycyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXB2NlJhbmdlcyI6IFtdCiAgICAgICAgICAgICAgICB9LCAKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUHJlZml4TGlzdElkcyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiRnJvbVBvcnQiOiAyMiwgCiAgICAgICAgICAgICAgICAgICAgIklwUmFuZ2VzIjogWwogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiQ2lkcklwIjogIjAuMC4wLjAvMCIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIF0sIAogICAgICAgICAgICAgICAgICAgICJUb1BvcnQiOiAyMiwgCiAgICAgICAgICAgICAgICAgICAgIklwUHJvdG9jb2wiOiAidGNwIiwgCiAgICAgICAgICAgICAgICAgICAgIlVzZXJJZEdyb3VwUGFpcnMiOiBbXSwgCiAgICAgICAgICAgICAgICAgICAgIklwdjZSYW5nZXMiOiBbXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkdyb3VwTmFtZSI6ICJXZWJTZXJ2ZXIiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1kYTBhNDNiZCIsIAogICAgICAgICAgICAiT3duZXJJZCI6ICI1ODQ4ODg4NTM2MDYiLCAKICAgICAgICAgICAgIkdyb3VwSWQiOiAic2ctMDNmOGM3MWRkM2VhYWIzYzkiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiSXBQZXJtaXNzaW9uc0VncmVzcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiSXBQcm90b2NvbCI6ICItMSIsIAogICAgICAgICAgICAgICAgICAgICJQcmVmaXhMaXN0SWRzIjogW10sIAogICAgICAgICAgICAgICAgICAgICJJcFJhbmdlcyI6IFsKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgIkNpZHJJcCI6ICIwLjAuMC4wLzAiCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBdLCAKICAgICAgICAgICAgICAgICAgICAiVXNlcklkR3JvdXBQYWlycyI6IFtdLCAKICAgICAgICAgICAgICAgICAgICAiSXB2NlJhbmdlcyI6IFtdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiZGVmYXVsdCBWUEMgc2VjdXJpdHkgZ3JvdXAiLCAKICAgICAgICAgICAgIklwUGVybWlzc2lvbnMiOiBbXSwgCiAgICAgICAgICAgICJHcm91cE5hbWUiOiAiZGVmYXVsdCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJPd25lcklkIjogIjU4NDg4ODg1MzYwNiIsIAogICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy1lZWU1NjE5NCIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeSecurityGroups']['_options'] = {};
awsim['ec2']['operations']['DescribeSecurityGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeSecurityGroups']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeLaunchTemplates']['_state'] = JSON.parse(atob('ewogICAgIkxhdW5jaFRlbXBsYXRlcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribeLaunchTemplates']['_options'] = {};
awsim['ec2']['operations']['DescribeLaunchTemplates']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeLaunchTemplates']['_state'], null, 1); };
awsim['ec2']['operations']['DescribePlacementGroups']['_state'] = JSON.parse(atob('ewogICAgIlBsYWNlbWVudEdyb3VwcyI6IFtdCn0K'));
awsim['ec2']['operations']['DescribePlacementGroups']['_options'] = {};
awsim['ec2']['operations']['DescribePlacementGroups']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribePlacementGroups']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeInternetGateways']['_state'] = JSON.parse(atob('ewogICAgIkludGVybmV0R2F0ZXdheXMiOiBbCiAgICAgICAgewogICAgICAgICAgICAiVGFncyI6IFtdLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnRzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIkludGVybmV0R2F0ZXdheUlkIjogImlndy0zOWQyY2I1ZCIKICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeInternetGateways']['_options'] = {};
awsim['ec2']['operations']['DescribeInternetGateways']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeInternetGateways']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeAvailabilityZones']['_state'] = JSON.parse(atob('ewogICAgIkF2YWlsYWJpbGl0eVpvbmVzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiWm9uZU5hbWUiOiAidXMtZWFzdC0xYSIsIAogICAgICAgICAgICAiTWVzc2FnZXMiOiBbXSwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogInVzLWVhc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIlpvbmVOYW1lIjogInVzLWVhc3QtMWIiLCAKICAgICAgICAgICAgIk1lc3NhZ2VzIjogW10sIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJab25lTmFtZSI6ICJ1cy1lYXN0LTFjIiwgCiAgICAgICAgICAgICJNZXNzYWdlcyI6IFtdLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAidXMtZWFzdC0xIgogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlN0YXRlIjogImF2YWlsYWJsZSIsIAogICAgICAgICAgICAiWm9uZU5hbWUiOiAidXMtZWFzdC0xZCIsIAogICAgICAgICAgICAiTWVzc2FnZXMiOiBbXSwgCiAgICAgICAgICAgICJSZWdpb25OYW1lIjogInVzLWVhc3QtMSIKICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0ZSI6ICJhdmFpbGFibGUiLCAKICAgICAgICAgICAgIlpvbmVOYW1lIjogInVzLWVhc3QtMWUiLCAKICAgICAgICAgICAgIk1lc3NhZ2VzIjogW10sIAogICAgICAgICAgICAiUmVnaW9uTmFtZSI6ICJ1cy1lYXN0LTEiCiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiU3RhdGUiOiAiYXZhaWxhYmxlIiwgCiAgICAgICAgICAgICJab25lTmFtZSI6ICJ1cy1lYXN0LTFmIiwgCiAgICAgICAgICAgICJNZXNzYWdlcyI6IFtdLCAKICAgICAgICAgICAgIlJlZ2lvbk5hbWUiOiAidXMtZWFzdC0xIgogICAgICAgIH0KICAgIF0KfQo='));
awsim['ec2']['operations']['DescribeAvailabilityZones']['_options'] = {};
awsim['ec2']['operations']['DescribeAvailabilityZones']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeAvailabilityZones']['_state'], null, 1); };
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_state'] = JSON.parse(atob('ewogICAgIk5ldHdvcmtJbnRlcmZhY2VzIjogWwogICAgICAgIHsKICAgICAgICAgICAgIlN0YXR1cyI6ICJpbi11c2UiLCAKICAgICAgICAgICAgIk1hY0FkZHJlc3MiOiAiMTY6ZDI6MmI6ZWM6ZDI6YzAiLCAKICAgICAgICAgICAgIlNvdXJjZURlc3RDaGVjayI6IHRydWUsIAogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFmIiwgCiAgICAgICAgICAgICJEZXNjcmlwdGlvbiI6ICJFTEIgYXBwL1dlYlNlcnZlckxvYWRCYWxhbmNlci8wM2FjOTU5YzM3NTU3Mzg2IiwgCiAgICAgICAgICAgICJOZXR3b3JrSW50ZXJmYWNlSWQiOiAiZW5pLTBmYWIxZTViMzU4OWNkNGQ1IiwgCiAgICAgICAgICAgICJWcGNJZCI6ICJ2cGMtZGEwYTQzYmQiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3NlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTkwLTEyNC5lYzIuaW50ZXJuYWwiLCAKICAgICAgICAgICAgICAgICAgICAiUHJpdmF0ZUlwQWRkcmVzcyI6ICIxNzIuMzEuOTAuMTI0IiwgCiAgICAgICAgICAgICAgICAgICAgIlByaW1hcnkiOiB0cnVlLCAKICAgICAgICAgICAgICAgICAgICAiQXNzb2NpYXRpb24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICIzNC4xOTIuMTQwLjIxNiIsIAogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljRG5zTmFtZSI6ICJlYzItMzQtMTkyLTE0MC0yMTYuY29tcHV0ZS0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIklwT3duZXJJZCI6ICJhbWF6b24tZWxiIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJSZXF1ZXN0ZXJNYW5hZ2VkIjogdHJ1ZSwgCiAgICAgICAgICAgICJQcml2YXRlRG5zTmFtZSI6ICJpcC0xNzItMzEtOTAtMTI0LmVjMi5pbnRlcm5hbCIsIAogICAgICAgICAgICAiUmVxdWVzdGVySWQiOiAiYW1hem9uLWVsYiIsIAogICAgICAgICAgICAiSW50ZXJmYWNlVHlwZSI6ICJpbnRlcmZhY2UiLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnQiOiB7CiAgICAgICAgICAgICAgICAiU3RhdHVzIjogImF0dGFjaGVkIiwgCiAgICAgICAgICAgICAgICAiRGV2aWNlSW5kZXgiOiAxLCAKICAgICAgICAgICAgICAgICJBdHRhY2hUaW1lIjogIjIwMTgtMDktMjRUMTU6NTE6MDIuMDAwWiIsIAogICAgICAgICAgICAgICAgIkRlbGV0ZU9uVGVybWluYXRpb24iOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAiQXR0YWNobWVudElkIjogImVuaS1hdHRhY2gtMGExNTU5YTUwYWUxMjEwNDYiLCAKICAgICAgICAgICAgICAgICJJbnN0YW5jZU93bmVySWQiOiAiYW1hem9uLWVsYiIKICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICJHcm91cHMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdyb3VwTmFtZSI6ICJXZWJTZXJ2ZXIiLCAKICAgICAgICAgICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy0wM2Y4YzcxZGQzZWFhYjNjOSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJJcHY2QWRkcmVzc2VzIjogW10sIAogICAgICAgICAgICAiT3duZXJJZCI6ICI1ODQ4ODg4NTM2MDYiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjkwLjEyNCIsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LWUxMWM3M2VkIiwgCiAgICAgICAgICAgICJUYWdTZXQiOiBbXSwgCiAgICAgICAgICAgICJBc3NvY2lhdGlvbiI6IHsKICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICIzNC4xOTIuMTQwLjIxNiIsIAogICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTM0LTE5Mi0xNDAtMjE2LmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAiSXBPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgIH0KICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0dXMiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJNYWNBZGRyZXNzIjogIjBhOjFkOjQxOmNkOjQ1OjhhIiwgCiAgICAgICAgICAgICJTb3VyY2VEZXN0Q2hlY2siOiB0cnVlLCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAidXMtZWFzdC0xZCIsIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiRUxCIGFwcC9XZWJTZXJ2ZXJMb2FkQmFsYW5jZXIvMDNhYzk1OWMzNzU1NzM4NiIsIAogICAgICAgICAgICAiTmV0d29ya0ludGVyZmFjZUlkIjogImVuaS0wN2FhYTJiNTg3MDgzNTBmNCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzZXMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVEbnNOYW1lIjogImlwLTE3Mi0zMS00LTIyOS5lYzIuaW50ZXJuYWwiLCAKICAgICAgICAgICAgICAgICAgICAiUHJpdmF0ZUlwQWRkcmVzcyI6ICIxNzIuMzEuNC4yMjkiLCAKICAgICAgICAgICAgICAgICAgICAiUHJpbWFyeSI6IHRydWUsIAogICAgICAgICAgICAgICAgICAgICJBc3NvY2lhdGlvbiI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgIlB1YmxpY0lwIjogIjM0LjE5OS4xMjUuMTg5IiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJQdWJsaWNEbnNOYW1lIjogImVjMi0zNC0xOTktMTI1LTE4OS5jb21wdXRlLTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAgICAgICAgICAgICAiSXBPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlJlcXVlc3Rlck1hbmFnZWQiOiB0cnVlLCAKICAgICAgICAgICAgIlByaXZhdGVEbnNOYW1lIjogImlwLTE3Mi0zMS00LTIyOS5lYzIuaW50ZXJuYWwiLCAKICAgICAgICAgICAgIlJlcXVlc3RlcklkIjogImFtYXpvbi1lbGIiLCAKICAgICAgICAgICAgIkludGVyZmFjZVR5cGUiOiAiaW50ZXJmYWNlIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50IjogewogICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgIkRldmljZUluZGV4IjogMSwgCiAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI0VDE1OjQ5OjQ2LjAwMFoiLCAKICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogZmFsc2UsIAogICAgICAgICAgICAgICAgIkF0dGFjaG1lbnRJZCI6ICJlbmktYXR0YWNoLTA5N2MyNWM3YWEyMDAwMWY0IiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgIH0sIAogICAgICAgICAgICAiR3JvdXBzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJHcm91cE5hbWUiOiAiV2ViU2VydmVyIiwgCiAgICAgICAgICAgICAgICAgICAgIkdyb3VwSWQiOiAic2ctMDNmOGM3MWRkM2VhYWIzYzkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiSXB2NkFkZHJlc3NlcyI6IFtdLCAKICAgICAgICAgICAgIk93bmVySWQiOiAiNTg0ODg4ODUzNjA2IiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzIjogIjE3Mi4zMS40LjIyOSIsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTQ4ODg1YzAxIiwgCiAgICAgICAgICAgICJUYWdTZXQiOiBbXSwgCiAgICAgICAgICAgICJBc3NvY2lhdGlvbiI6IHsKICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICIzNC4xOTkuMTI1LjE4OSIsIAogICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTM0LTE5OS0xMjUtMTg5LmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAiSXBPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgIH0KICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0dXMiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJNYWNBZGRyZXNzIjogIjEyOmEzOmVjOjJmOjZmOjI2IiwgCiAgICAgICAgICAgICJTb3VyY2VEZXN0Q2hlY2siOiB0cnVlLCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAidXMtZWFzdC0xYyIsIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiIiwgCiAgICAgICAgICAgICJOZXR3b3JrSW50ZXJmYWNlSWQiOiAiZW5pLTBhYWIyMWVjMjQwNDdiYWFjIiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzZXMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVEbnNOYW1lIjogImlwLTE3Mi0zMS01OC0xNzIuZWMyLmludGVybmFsIiwgCiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjU4LjE3MiIsIAogICAgICAgICAgICAgICAgICAgICJQcmltYXJ5IjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljSXAiOiAiNTQuMTQ0LjExNi4xNDEiLCAKICAgICAgICAgICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTU0LTE0NC0xMTYtMTQxLmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJSZXF1ZXN0ZXJNYW5hZ2VkIjogZmFsc2UsIAogICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTU4LTE3Mi5lYzIuaW50ZXJuYWwiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1kYTBhNDNiZCIsIAogICAgICAgICAgICAiSW50ZXJmYWNlVHlwZSI6ICJpbnRlcmZhY2UiLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnQiOiB7CiAgICAgICAgICAgICAgICAiU3RhdHVzIjogImF0dGFjaGVkIiwgCiAgICAgICAgICAgICAgICAiRGV2aWNlSW5kZXgiOiAwLCAKICAgICAgICAgICAgICAgICJBdHRhY2hUaW1lIjogIjIwMTgtMDktMjRUMTU6NDk6MjkuMDAwWiIsIAogICAgICAgICAgICAgICAgIkluc3RhbmNlSWQiOiAiaS0wMzM1OWJiZmE4NGJhMGViNyIsIAogICAgICAgICAgICAgICAgIkRlbGV0ZU9uVGVybWluYXRpb24iOiB0cnVlLCAKICAgICAgICAgICAgICAgICJBdHRhY2htZW50SWQiOiAiZW5pLWF0dGFjaC0wYmU1YmI1YTMyZjIxZWY2ZCIsIAogICAgICAgICAgICAgICAgIkluc3RhbmNlT3duZXJJZCI6ICI1ODQ4ODg4NTM2MDYiCiAgICAgICAgICAgIH0sIAogICAgICAgICAgICAiR3JvdXBzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJHcm91cE5hbWUiOiAiV2ViU2VydmVyIiwgCiAgICAgICAgICAgICAgICAgICAgIkdyb3VwSWQiOiAic2ctMDNmOGM3MWRkM2VhYWIzYzkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiSXB2NkFkZHJlc3NlcyI6IFtdLCAKICAgICAgICAgICAgIk93bmVySWQiOiAiNTg0ODg4ODUzNjA2IiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzIjogIjE3Mi4zMS41OC4xNzIiLCAKICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC0zODE3ZjIxNSIsIAogICAgICAgICAgICAiVGFnU2V0IjogW10sIAogICAgICAgICAgICAiQXNzb2NpYXRpb24iOiB7CiAgICAgICAgICAgICAgICAiUHVibGljSXAiOiAiNTQuMTQ0LjExNi4xNDEiLCAKICAgICAgICAgICAgICAgICJQdWJsaWNEbnNOYW1lIjogImVjMi01NC0xNDQtMTE2LTE0MS5jb21wdXRlLTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAgICAgIklwT3duZXJJZCI6ICJhbWF6b24iCiAgICAgICAgICAgIH0KICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0dXMiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJNYWNBZGRyZXNzIjogIjEyOmM1OjEzOjEzOjc1OjM2IiwgCiAgICAgICAgICAgICJTb3VyY2VEZXN0Q2hlY2siOiB0cnVlLCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAidXMtZWFzdC0xYyIsIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiRUxCIGFwcC9XZWJTZXJ2ZXJMb2FkQmFsYW5jZXIvMDNhYzk1OWMzNzU1NzM4NiIsIAogICAgICAgICAgICAiTmV0d29ya0ludGVyZmFjZUlkIjogImVuaS0wYWMyZmQzZGRmYTI4NmEyNCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzZXMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVEbnNOYW1lIjogImlwLTE3Mi0zMS01Mi00LmVjMi5pbnRlcm5hbCIsIAogICAgICAgICAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzIjogIjE3Mi4zMS41Mi40IiwgCiAgICAgICAgICAgICAgICAgICAgIlByaW1hcnkiOiB0cnVlLCAKICAgICAgICAgICAgICAgICAgICAiQXNzb2NpYXRpb24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICI1Mi4yMDcuNjIuNSIsIAogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljRG5zTmFtZSI6ICJlYzItNTItMjA3LTYyLTUuY29tcHV0ZS0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIklwT3duZXJJZCI6ICJhbWF6b24tZWxiIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJSZXF1ZXN0ZXJNYW5hZ2VkIjogdHJ1ZSwgCiAgICAgICAgICAgICJQcml2YXRlRG5zTmFtZSI6ICJpcC0xNzItMzEtNTItNC5lYzIuaW50ZXJuYWwiLCAKICAgICAgICAgICAgIlJlcXVlc3RlcklkIjogImFtYXpvbi1lbGIiLCAKICAgICAgICAgICAgIkludGVyZmFjZVR5cGUiOiAiaW50ZXJmYWNlIiwgCiAgICAgICAgICAgICJBdHRhY2htZW50IjogewogICAgICAgICAgICAgICAgIlN0YXR1cyI6ICJhdHRhY2hlZCIsIAogICAgICAgICAgICAgICAgIkRldmljZUluZGV4IjogMSwgCiAgICAgICAgICAgICAgICAiQXR0YWNoVGltZSI6ICIyMDE4LTA5LTI0VDE1OjUxOjIzLjAwMFoiLCAKICAgICAgICAgICAgICAgICJEZWxldGVPblRlcm1pbmF0aW9uIjogZmFsc2UsIAogICAgICAgICAgICAgICAgIkF0dGFjaG1lbnRJZCI6ICJlbmktYXR0YWNoLTAwYzVmNzFjYTFjZWJiYzhiIiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgIH0sIAogICAgICAgICAgICAiR3JvdXBzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJHcm91cE5hbWUiOiAiV2ViU2VydmVyIiwgCiAgICAgICAgICAgICAgICAgICAgIkdyb3VwSWQiOiAic2ctMDNmOGM3MWRkM2VhYWIzYzkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiSXB2NkFkZHJlc3NlcyI6IFtdLCAKICAgICAgICAgICAgIk93bmVySWQiOiAiNTg0ODg4ODUzNjA2IiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzIjogIjE3Mi4zMS41Mi40IiwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtMzgxN2YyMTUiLCAKICAgICAgICAgICAgIlRhZ1NldCI6IFtdLCAKICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgIlB1YmxpY0lwIjogIjUyLjIwNy42Mi41IiwgCiAgICAgICAgICAgICAgICAiUHVibGljRG5zTmFtZSI6ICJlYzItNTItMjA3LTYyLTUuY29tcHV0ZS0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uLWVsYiIKICAgICAgICAgICAgfQogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlN0YXR1cyI6ICJpbi11c2UiLCAKICAgICAgICAgICAgIk1hY0FkZHJlc3MiOiAiMDI6ODk6YjQ6ZDA6NmU6YmMiLCAKICAgICAgICAgICAgIlNvdXJjZURlc3RDaGVjayI6IHRydWUsIAogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFiIiwgCiAgICAgICAgICAgICJEZXNjcmlwdGlvbiI6ICIiLCAKICAgICAgICAgICAgIk5ldHdvcmtJbnRlcmZhY2VJZCI6ICJlbmktMDA3YmU2MWY2YTVjMzhkNWQiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3NlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTc1LTE3Ni5lYzIuaW50ZXJuYWwiLCAKICAgICAgICAgICAgICAgICAgICAiUHJpdmF0ZUlwQWRkcmVzcyI6ICIxNzIuMzEuNzUuMTc2IiwgCiAgICAgICAgICAgICAgICAgICAgIlByaW1hcnkiOiB0cnVlLCAKICAgICAgICAgICAgICAgICAgICAiQXNzb2NpYXRpb24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICIxOC4yMDguMTk1LjIzMyIsIAogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljRG5zTmFtZSI6ICJlYzItMTgtMjA4LTE5NS0yMzMuY29tcHV0ZS0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgICAgICAgICAgICAgIklwT3duZXJJZCI6ICJhbWF6b24iCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlJlcXVlc3Rlck1hbmFnZWQiOiBmYWxzZSwgCiAgICAgICAgICAgICJQcml2YXRlRG5zTmFtZSI6ICJpcC0xNzItMzEtNzUtMTc2LmVjMi5pbnRlcm5hbCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJJbnRlcmZhY2VUeXBlIjogImludGVyZmFjZSIsIAogICAgICAgICAgICAiQXR0YWNobWVudCI6IHsKICAgICAgICAgICAgICAgICJTdGF0dXMiOiAiYXR0YWNoZWQiLCAKICAgICAgICAgICAgICAgICJEZXZpY2VJbmRleCI6IDAsIAogICAgICAgICAgICAgICAgIkF0dGFjaFRpbWUiOiAiMjAxOC0wOS0yNFQxNTo0OToyOC4wMDBaIiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTA5YzExZDQxYWY1YzNmYzUyIiwgCiAgICAgICAgICAgICAgICAiRGVsZXRlT25UZXJtaW5hdGlvbiI6IHRydWUsIAogICAgICAgICAgICAgICAgIkF0dGFjaG1lbnRJZCI6ICJlbmktYXR0YWNoLTAwM2Q2ZWMzODQ3ZWM2M2JjIiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VPd25lcklkIjogIjU4NDg4ODg1MzYwNiIKICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICJHcm91cHMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdyb3VwTmFtZSI6ICJXZWJTZXJ2ZXIiLCAKICAgICAgICAgICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy0wM2Y4YzcxZGQzZWFhYjNjOSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJJcHY2QWRkcmVzc2VzIjogW10sIAogICAgICAgICAgICAiT3duZXJJZCI6ICI1ODQ4ODg4NTM2MDYiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjc1LjE3NiIsIAogICAgICAgICAgICAiU3VibmV0SWQiOiAic3VibmV0LTk5NjMxYWZjIiwgCiAgICAgICAgICAgICJUYWdTZXQiOiBbXSwgCiAgICAgICAgICAgICJBc3NvY2lhdGlvbiI6IHsKICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICIxOC4yMDguMTk1LjIzMyIsIAogICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTE4LTIwOC0xOTUtMjMzLmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAiSXBPd25lcklkIjogImFtYXpvbiIKICAgICAgICAgICAgfQogICAgICAgIH0sIAogICAgICAgIHsKICAgICAgICAgICAgIlN0YXR1cyI6ICJpbi11c2UiLCAKICAgICAgICAgICAgIk1hY0FkZHJlc3MiOiAiMTY6YzA6MDI6OTk6ZjU6NmUiLCAKICAgICAgICAgICAgIlNvdXJjZURlc3RDaGVjayI6IHRydWUsIAogICAgICAgICAgICAiQXZhaWxhYmlsaXR5Wm9uZSI6ICJ1cy1lYXN0LTFmIiwgCiAgICAgICAgICAgICJEZXNjcmlwdGlvbiI6ICIiLCAKICAgICAgICAgICAgIk5ldHdvcmtJbnRlcmZhY2VJZCI6ICJlbmktMGRjZTE0NDAwYTg2YzAyN2EiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3NlcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTg3LTQyLmVjMi5pbnRlcm5hbCIsIAogICAgICAgICAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzIjogIjE3Mi4zMS44Ny40MiIsIAogICAgICAgICAgICAgICAgICAgICJQcmltYXJ5IjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljSXAiOiAiMzQuMjI5LjExOS4xNjYiLCAKICAgICAgICAgICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTM0LTIyOS0xMTktMTY2LmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJSZXF1ZXN0ZXJNYW5hZ2VkIjogZmFsc2UsIAogICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTg3LTQyLmVjMi5pbnRlcm5hbCIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJJbnRlcmZhY2VUeXBlIjogImludGVyZmFjZSIsIAogICAgICAgICAgICAiQXR0YWNobWVudCI6IHsKICAgICAgICAgICAgICAgICJTdGF0dXMiOiAiYXR0YWNoZWQiLCAKICAgICAgICAgICAgICAgICJEZXZpY2VJbmRleCI6IDAsIAogICAgICAgICAgICAgICAgIkF0dGFjaFRpbWUiOiAiMjAxOC0wOS0yNFQxNTo0OToyOC4wMDBaIiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VJZCI6ICJpLTBlZmJhZTY4NjZkOTIyMGIwIiwgCiAgICAgICAgICAgICAgICAiRGVsZXRlT25UZXJtaW5hdGlvbiI6IHRydWUsIAogICAgICAgICAgICAgICAgIkF0dGFjaG1lbnRJZCI6ICJlbmktYXR0YWNoLTAxZDU1OWE5ZTIyNjQ5ZDZmIiwgCiAgICAgICAgICAgICAgICAiSW5zdGFuY2VPd25lcklkIjogIjU4NDg4ODg1MzYwNiIKICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICJHcm91cHMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdyb3VwTmFtZSI6ICJXZWJTZXJ2ZXIiLCAKICAgICAgICAgICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy0wM2Y4YzcxZGQzZWFhYjNjOSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJJcHY2QWRkcmVzc2VzIjogW10sIAogICAgICAgICAgICAiT3duZXJJZCI6ICI1ODQ4ODg4NTM2MDYiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjg3LjQyIiwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtZTExYzczZWQiLCAKICAgICAgICAgICAgIlRhZ1NldCI6IFtdLCAKICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgIlB1YmxpY0lwIjogIjM0LjIyOS4xMTkuMTY2IiwgCiAgICAgICAgICAgICAgICAiUHVibGljRG5zTmFtZSI6ICJlYzItMzQtMjI5LTExOS0xNjYuY29tcHV0ZS0xLmFtYXpvbmF3cy5jb20iLCAKICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uIgogICAgICAgICAgICB9CiAgICAgICAgfSwgCiAgICAgICAgewogICAgICAgICAgICAiU3RhdHVzIjogImluLXVzZSIsIAogICAgICAgICAgICAiTWFjQWRkcmVzcyI6ICIwNjplMDowNzo5ODoxNTpmOCIsIAogICAgICAgICAgICAiU291cmNlRGVzdENoZWNrIjogdHJ1ZSwgCiAgICAgICAgICAgICJBdmFpbGFiaWxpdHlab25lIjogInVzLWVhc3QtMWUiLCAKICAgICAgICAgICAgIkRlc2NyaXB0aW9uIjogIkVMQiBhcHAvV2ViU2VydmVyTG9hZEJhbGFuY2VyLzAzYWM5NTljMzc1NTczODYiLCAKICAgICAgICAgICAgIk5ldHdvcmtJbnRlcmZhY2VJZCI6ICJlbmktMGQ1YjhjNGU5MmIyYzg5YTkiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1kYTBhNDNiZCIsIAogICAgICAgICAgICAiUHJpdmF0ZUlwQWRkcmVzc2VzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJQcml2YXRlRG5zTmFtZSI6ICJpcC0xNzItMzEtNDAtNzQuZWMyLmludGVybmFsIiwgCiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjQwLjc0IiwgCiAgICAgICAgICAgICAgICAgICAgIlByaW1hcnkiOiB0cnVlLCAKICAgICAgICAgICAgICAgICAgICAiQXNzb2NpYXRpb24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJQdWJsaWNJcCI6ICI1Mi4yLjI3LjU2IiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJQdWJsaWNEbnNOYW1lIjogImVjMi01Mi0yLTI3LTU2LmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uLWVsYiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiUmVxdWVzdGVyTWFuYWdlZCI6IHRydWUsIAogICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTQwLTc0LmVjMi5pbnRlcm5hbCIsIAogICAgICAgICAgICAiUmVxdWVzdGVySWQiOiAiYW1hem9uLWVsYiIsIAogICAgICAgICAgICAiSW50ZXJmYWNlVHlwZSI6ICJpbnRlcmZhY2UiLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnQiOiB7CiAgICAgICAgICAgICAgICAiU3RhdHVzIjogImF0dGFjaGVkIiwgCiAgICAgICAgICAgICAgICAiRGV2aWNlSW5kZXgiOiAxLCAKICAgICAgICAgICAgICAgICJBdHRhY2hUaW1lIjogIjIwMTgtMDktMjRUMTU6NTE6MDQuMDAwWiIsIAogICAgICAgICAgICAgICAgIkRlbGV0ZU9uVGVybWluYXRpb24iOiBmYWxzZSwgCiAgICAgICAgICAgICAgICAiQXR0YWNobWVudElkIjogImVuaS1hdHRhY2gtMDU2YTc2ZWM1MTFlYTkyMjAiLCAKICAgICAgICAgICAgICAgICJJbnN0YW5jZU93bmVySWQiOiAiYW1hem9uLWVsYiIKICAgICAgICAgICAgfSwgCiAgICAgICAgICAgICJHcm91cHMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIkdyb3VwTmFtZSI6ICJXZWJTZXJ2ZXIiLCAKICAgICAgICAgICAgICAgICAgICAiR3JvdXBJZCI6ICJzZy0wM2Y4YzcxZGQzZWFhYjNjOSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJJcHY2QWRkcmVzc2VzIjogW10sIAogICAgICAgICAgICAiT3duZXJJZCI6ICI1ODQ4ODg4NTM2MDYiLCAKICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjQwLjc0IiwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtZjE3Mzk3Y2QiLCAKICAgICAgICAgICAgIlRhZ1NldCI6IFtdLCAKICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgIlB1YmxpY0lwIjogIjUyLjIuMjcuNTYiLCAKICAgICAgICAgICAgICAgICJQdWJsaWNEbnNOYW1lIjogImVjMi01Mi0yLTI3LTU2LmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAiSXBPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgIH0KICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0dXMiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJNYWNBZGRyZXNzIjogIjAyOmI2OmU4OjE2Ojk0OmIyIiwgCiAgICAgICAgICAgICJTb3VyY2VEZXN0Q2hlY2siOiB0cnVlLCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAidXMtZWFzdC0xYiIsIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiRUxCIGFwcC9XZWJTZXJ2ZXJMb2FkQmFsYW5jZXIvMDNhYzk1OWMzNzU1NzM4NiIsIAogICAgICAgICAgICAiTmV0d29ya0ludGVyZmFjZUlkIjogImVuaS0wMGQzYjhlMTUwYmNlOWMyYiIsIAogICAgICAgICAgICAiVnBjSWQiOiAidnBjLWRhMGE0M2JkIiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzZXMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVEbnNOYW1lIjogImlwLTE3Mi0zMS02OC0xMjMuZWMyLmludGVybmFsIiwgCiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjY4LjEyMyIsIAogICAgICAgICAgICAgICAgICAgICJQcmltYXJ5IjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljSXAiOiAiNTIuMjAwLjg2LjE5OSIsIAogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljRG5zTmFtZSI6ICJlYzItNTItMjAwLTg2LTE5OS5jb21wdXRlLTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAgICAgICAgICAgICAiSXBPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIlJlcXVlc3Rlck1hbmFnZWQiOiB0cnVlLCAKICAgICAgICAgICAgIlByaXZhdGVEbnNOYW1lIjogImlwLTE3Mi0zMS02OC0xMjMuZWMyLmludGVybmFsIiwgCiAgICAgICAgICAgICJSZXF1ZXN0ZXJJZCI6ICJhbWF6b24tZWxiIiwgCiAgICAgICAgICAgICJJbnRlcmZhY2VUeXBlIjogImludGVyZmFjZSIsIAogICAgICAgICAgICAiQXR0YWNobWVudCI6IHsKICAgICAgICAgICAgICAgICJTdGF0dXMiOiAiYXR0YWNoZWQiLCAKICAgICAgICAgICAgICAgICJEZXZpY2VJbmRleCI6IDEsIAogICAgICAgICAgICAgICAgIkF0dGFjaFRpbWUiOiAiMjAxOC0wOS0yNFQxNTo1MTowMy4wMDBaIiwgCiAgICAgICAgICAgICAgICAiRGVsZXRlT25UZXJtaW5hdGlvbiI6IGZhbHNlLCAKICAgICAgICAgICAgICAgICJBdHRhY2htZW50SWQiOiAiZW5pLWF0dGFjaC0wZGNiYjBlZmZkNzViNTRiNSIsIAogICAgICAgICAgICAgICAgIkluc3RhbmNlT3duZXJJZCI6ICJhbWF6b24tZWxiIgogICAgICAgICAgICB9LCAKICAgICAgICAgICAgIkdyb3VwcyI6IFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAiR3JvdXBOYW1lIjogIldlYlNlcnZlciIsIAogICAgICAgICAgICAgICAgICAgICJHcm91cElkIjogInNnLTAzZjhjNzFkZDNlYWFiM2M5IgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICBdLCAKICAgICAgICAgICAgIklwdjZBZGRyZXNzZXMiOiBbXSwgCiAgICAgICAgICAgICJPd25lcklkIjogIjU4NDg4ODg1MzYwNiIsIAogICAgICAgICAgICAiUHJpdmF0ZUlwQWRkcmVzcyI6ICIxNzIuMzEuNjguMTIzIiwgCiAgICAgICAgICAgICJTdWJuZXRJZCI6ICJzdWJuZXQtOTk2MzFhZmMiLCAKICAgICAgICAgICAgIlRhZ1NldCI6IFtdLCAKICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgIlB1YmxpY0lwIjogIjUyLjIwMC44Ni4xOTkiLCAKICAgICAgICAgICAgICAgICJQdWJsaWNEbnNOYW1lIjogImVjMi01Mi0yMDAtODYtMTk5LmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAiSXBPd25lcklkIjogImFtYXpvbi1lbGIiCiAgICAgICAgICAgIH0KICAgICAgICB9LCAKICAgICAgICB7CiAgICAgICAgICAgICJTdGF0dXMiOiAiaW4tdXNlIiwgCiAgICAgICAgICAgICJNYWNBZGRyZXNzIjogIjA2OjM3OjBjOjYyOjY0OmYyIiwgCiAgICAgICAgICAgICJTb3VyY2VEZXN0Q2hlY2siOiB0cnVlLCAKICAgICAgICAgICAgIkF2YWlsYWJpbGl0eVpvbmUiOiAidXMtZWFzdC0xZSIsIAogICAgICAgICAgICAiRGVzY3JpcHRpb24iOiAiIiwgCiAgICAgICAgICAgICJOZXR3b3JrSW50ZXJmYWNlSWQiOiAiZW5pLTBhMDVjNWFiZDg1MzU1NGQ1IiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzZXMiOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVEbnNOYW1lIjogImlwLTE3Mi0zMS00Ni0yMDYuZWMyLmludGVybmFsIiwgCiAgICAgICAgICAgICAgICAgICAgIlByaXZhdGVJcEFkZHJlc3MiOiAiMTcyLjMxLjQ2LjIwNiIsIAogICAgICAgICAgICAgICAgICAgICJQcmltYXJ5IjogdHJ1ZSwgCiAgICAgICAgICAgICAgICAgICAgIkFzc29jaWF0aW9uIjogewogICAgICAgICAgICAgICAgICAgICAgICAiUHVibGljSXAiOiAiMzQuMjM5LjI1NS4xODEiLCAKICAgICAgICAgICAgICAgICAgICAgICAgIlB1YmxpY0Ruc05hbWUiOiAiZWMyLTM0LTIzOS0yNTUtMTgxLmNvbXB1dGUtMS5hbWF6b25hd3MuY29tIiwgCiAgICAgICAgICAgICAgICAgICAgICAgICJJcE93bmVySWQiOiAiYW1hem9uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgXSwgCiAgICAgICAgICAgICJSZXF1ZXN0ZXJNYW5hZ2VkIjogZmFsc2UsIAogICAgICAgICAgICAiUHJpdmF0ZURuc05hbWUiOiAiaXAtMTcyLTMxLTQ2LTIwNi5lYzIuaW50ZXJuYWwiLCAKICAgICAgICAgICAgIlZwY0lkIjogInZwYy1kYTBhNDNiZCIsIAogICAgICAgICAgICAiSW50ZXJmYWNlVHlwZSI6ICJpbnRlcmZhY2UiLCAKICAgICAgICAgICAgIkF0dGFjaG1lbnQiOiB7CiAgICAgICAgICAgICAgICAiU3RhdHVzIjogImF0dGFjaGVkIiwgCiAgICAgICAgICAgICAgICAiRGV2aWNlSW5kZXgiOiAwLCAKICAgICAgICAgICAgICAgICJBdHRhY2hUaW1lIjogIjIwMTgtMDktMjRUMTU6NDk6MjguMDAwWiIsIAogICAgICAgICAgICAgICAgIkluc3RhbmNlSWQiOiAiaS0wM2E2NTQ5N2YxOTFmNjY3ZSIsIAogICAgICAgICAgICAgICAgIkRlbGV0ZU9uVGVybWluYXRpb24iOiB0cnVlLCAKICAgICAgICAgICAgICAgICJBdHRhY2htZW50SWQiOiAiZW5pLWF0dGFjaC0wNmM3N2Q0NDg1NjEyZDQ4YyIsIAogICAgICAgICAgICAgICAgIkluc3RhbmNlT3duZXJJZCI6ICI1ODQ4ODg4NTM2MDYiCiAgICAgICAgICAgIH0sIAogICAgICAgICAgICAiR3JvdXBzIjogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICJHcm91cE5hbWUiOiAiV2ViU2VydmVyIiwgCiAgICAgICAgICAgICAgICAgICAgIkdyb3VwSWQiOiAic2ctMDNmOGM3MWRkM2VhYWIzYzkiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIF0sIAogICAgICAgICAgICAiSXB2NkFkZHJlc3NlcyI6IFtdLCAKICAgICAgICAgICAgIk93bmVySWQiOiAiNTg0ODg4ODUzNjA2IiwgCiAgICAgICAgICAgICJQcml2YXRlSXBBZGRyZXNzIjogIjE3Mi4zMS40Ni4yMDYiLCAKICAgICAgICAgICAgIlN1Ym5ldElkIjogInN1Ym5ldC1mMTczOTdjZCIsIAogICAgICAgICAgICAiVGFnU2V0IjogW10sIAogICAgICAgICAgICAiQXNzb2NpYXRpb24iOiB7CiAgICAgICAgICAgICAgICAiUHVibGljSXAiOiAiMzQuMjM5LjI1NS4xODEiLCAKICAgICAgICAgICAgICAgICJQdWJsaWNEbnNOYW1lIjogImVjMi0zNC0yMzktMjU1LTE4MS5jb21wdXRlLTEuYW1hem9uYXdzLmNvbSIsIAogICAgICAgICAgICAgICAgIklwT3duZXJJZCI6ICJhbWF6b24iCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICBdCn0K'));
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_options'] = {};
awsim['ec2']['operations']['DescribeNetworkInterfaces']['_execute'] = function(CommandObject) { return JSON.stringify(awsim['ec2']['operations']['DescribeNetworkInterfaces']['_state'], null, 1); };
awsim['dynamodb']['operations']['DescribeTable']['_options'] = {};
awsim['dynamodb']['operations']['DescribeTable']['_state'] = {};
awsim['dynamodb']['operations']['DescribeTable']['_state']['--table-name WebServerDB'] = JSON.parse(atob('ewogICAgIlRhYmxlIjogewogICAgICAgICJUYWJsZUFybiI6ICJhcm46YXdzOmR5bmFtb2RiOnVzLWVhc3QtMTo1ODQ4ODg4NTM2MDY6dGFibGUvV2ViU2VydmVyREIiLCAKICAgICAgICAiQXR0cmlidXRlRGVmaW5pdGlvbnMiOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICJBdHRyaWJ1dGVOYW1lIjogImlkIiwgCiAgICAgICAgICAgICAgICAiQXR0cmlidXRlVHlwZSI6ICJTIgogICAgICAgICAgICB9CiAgICAgICAgXSwgCiAgICAgICAgIlByb3Zpc2lvbmVkVGhyb3VnaHB1dCI6IHsKICAgICAgICAgICAgIk51bWJlck9mRGVjcmVhc2VzVG9kYXkiOiAwLCAKICAgICAgICAgICAgIldyaXRlQ2FwYWNpdHlVbml0cyI6IDUsIAogICAgICAgICAgICAiUmVhZENhcGFjaXR5VW5pdHMiOiA1CiAgICAgICAgfSwgCiAgICAgICAgIlRhYmxlU2l6ZUJ5dGVzIjogMCwgCiAgICAgICAgIlRhYmxlTmFtZSI6ICJXZWJTZXJ2ZXJEQiIsIAogICAgICAgICJUYWJsZVN0YXR1cyI6ICJBQ1RJVkUiLCAKICAgICAgICAiVGFibGVJZCI6ICI4ZjA1MWY2Zi1iNThlLTQ0YTItYmFhNC0zZmNmZGQ2MjViOTgiLCAKICAgICAgICAiS2V5U2NoZW1hIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAiS2V5VHlwZSI6ICJIQVNIIiwgCiAgICAgICAgICAgICAgICAiQXR0cmlidXRlTmFtZSI6ICJpZCIKICAgICAgICAgICAgfQogICAgICAgIF0sIAogICAgICAgICJJdGVtQ291bnQiOiAwLCAKICAgICAgICAiQ3JlYXRpb25EYXRlVGltZSI6IDE1Mzc4MDUwNDcuOTIzCiAgICB9Cn0K'));
